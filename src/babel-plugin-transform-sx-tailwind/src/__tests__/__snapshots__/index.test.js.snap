// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`transform SX Tailwind animation.js: animation.js 1`] = `

// @flow strict

import type { Node } from 'react';

export default function Example(): Node {
  return (
    <span sxt="flex h-3 w-3">
      <span sxt="animate-ping absolute inline-flex h-full w-full rounded-full bg-pink-400 opacity-75" />
      <span sxt="relative inline-flex rounded-full h-3 w-3 bg-pink-500" />
    </span>
  );
}

      ↓ ↓ ↓ ↓ ↓ ↓

// @flow strict
import type { Node } from 'react';
import sx from '@adeira/sx';
export default function Example(): Node {
  return (
    <span className={__styles_3xIUAp('flex', 'h-3', 'w-3')}>
      <span
        className={__styles_3xIUAp(
          'animate-ping',
          'absolute',
          'inline-flex',
          'h-full',
          'w-full',
          'rounded-full',
          'bg-pink-400',
          'opacity-75',
        )}
      />
      <span
        className={__styles_3xIUAp(
          'relative',
          'inline-flex',
          'rounded-full',
          'h-3',
          'w-3',
          'bg-pink-500',
        )}
      />
    </span>
  );
}

const __styles_3xIUAp = sx.create({
  'flex': {
    display: 'flex',
  },
  'h-3': {
    height: '0.75rem',
  },
  'w-3': {
    width: '0.75rem',
  },
  'animate-ping': {
    'animation': 'var(--animation-name-ping) 1s cubic-bezier(0, 0, 0.2, 1) infinite',
    '--animation-name-ping': sx.keyframes({
      '75%, 100%': {
        transform: 'scale(2)',
        opacity: '0',
      },
    }),
  },
  'absolute': {
    position: 'absolute',
  },
  'inline-flex': {
    display: 'inline-flex',
  },
  'h-full': {
    height: '100%',
  },
  'w-full': {
    width: '100%',
  },
  'rounded-full': {
    borderRadius: '9999px',
  },
  'bg-pink-400': {
    '--tw-bg-opacity': '1',
    'backgroundColor': 'rgba(244, 114, 182, var(--tw-bg-opacity))',
  },
  'opacity-75': {
    opacity: 0.75,
  },
  'relative': {
    position: 'relative',
  },
  'bg-pink-500': {
    '--tw-bg-opacity': '1',
    'backgroundColor': 'rgba(236, 72, 153, var(--tw-bg-opacity))',
  },
});


`;

exports[`transform SX Tailwind conditional-operator.js: conditional-operator.js 1`] = `

// @flow strict

import type { Element } from 'react';

export default function Example(isVisible: boolean): Element<'div'> {
  return <div sxt={isVisible ? 'block visible' : 'hidden invisible'}>Lorem lipsum</div>;
}

      ↓ ↓ ↓ ↓ ↓ ↓

// @flow strict
import type { Element } from 'react';
import sx from '@adeira/sx';
export default function Example(isVisible: boolean): Element<'div'> {
  return (
    <div
      className={__styles_1spSrF(...(isVisible ? ['block', 'visible'] : ['hidden', 'invisible']))}
    >
      Lorem lipsum
    </div>
  );
}

const __styles_1spSrF = sx.create({
  block: {
    display: 'block',
  },
  visible: {
    visibility: 'visible',
  },
  hidden: {
    display: 'none',
  },
  invisible: {
    visibility: 'hidden',
  },
});


`;

exports[`transform SX Tailwind custom-font.js: custom-font.js 1`] = `

// @flow strict

import type { Node } from 'react';

export default function Example(): Node {
  return (
    <>
      <div sxt="font-sans">Sans text</div>
      <div sxt="font-mono">Monospace text</div>
    </>
  );
}

      ↓ ↓ ↓ ↓ ↓ ↓

// @flow strict
import type { Node } from 'react';
import sx from '@adeira/sx';
export default function Example(): Node {
  return (
    <>
      <div className={__styles_3xR9dL('font-sans')}>Sans text</div>
      <div className={__styles_3xR9dL('font-mono')}>Monospace text</div>
    </>
  );
}

const __styles_3xR9dL = sx.create({
  'font-sans': {
    fontFamily: 'Inter, sans-serif',
  },
  'font-mono': {
    fontFamily: '"Courier New"',
  },
});


`;

exports[`transform SX Tailwind invalid-utility-class.js: invalid-utility-class.js 1`] = `

// @flow strict

import type { Node } from 'react';

export default function Example(): Node {
  return <div sxt="bg-bleu-500">Button</div>;
}

      ↓ ↓ ↓ ↓ ↓ ↓

Error: <PROJECT_ROOT>/src/babel-plugin-transform-sx-tailwind/src/__tests__/fixtures/error/invalid-utility-class.js: Unknow utility name: bg-bleu-500. Did you mean "bg-blue-500" instead?

`;

exports[`transform SX Tailwind nested.js: nested.js 1`] = `

// @flow strict

import type { Node } from 'react';

export default function Example(): Node {
  return (
    <div sxt="text-white bg-black">
      White on black
      <div sxt="text-black bg-white">Black on white</div>
    </div>
  );
}

      ↓ ↓ ↓ ↓ ↓ ↓

// @flow strict
import type { Node } from 'react';
import sx from '@adeira/sx';
export default function Example(): Node {
  return (
    <div className={__styles_BKbxA('text-white', 'bg-black')}>
      White on black
      <div className={__styles_BKbxA('text-black', 'bg-white')}>Black on white</div>
    </div>
  );
}

const __styles_BKbxA = sx.create({
  'text-white': {
    '--tw-text-opacity': '1',
    'color': 'rgba(255, 255, 255, var(--tw-text-opacity))',
  },
  'bg-black': {
    '--tw-bg-opacity': '1',
    'backgroundColor': 'rgba(0, 0, 0, var(--tw-bg-opacity))',
  },
  'text-black': {
    '--tw-text-opacity': '1',
    'color': 'rgba(0, 0, 0, var(--tw-text-opacity))',
  },
  'bg-white': {
    '--tw-bg-opacity': '1',
    'backgroundColor': 'rgba(255, 255, 255, var(--tw-bg-opacity))',
  },
});


`;

exports[`transform SX Tailwind no-sx-used.js: no-sx-used.js 1`] = `

// @flow strict

import type { Element } from 'react';

export default function Example(): Element<'button'> {
  return (
    <button className="my-button" type="button">
      Button
    </button>
  );
}

      ↓ ↓ ↓ ↓ ↓ ↓

// @flow strict
import type { Element } from 'react';
export default function Example(): Element<'button'> {
  return (
    <button className="my-button" type="button">
      Button
    </button>
  );
}


`;

exports[`transform SX Tailwind styles-var-exists.js: styles-var-exists.js 1`] = `

// @flow strict

import type { Element } from 'react';

export default function Example(): Element<'button'> {
  return (
    <button sxt="bg-blue-500 hover:bg-blue-700 text-white font-bold" type="button">
      Button
    </button>
  );
}

// eslint-disable-next-line no-unused-vars
const styles = 'Here I am';

      ↓ ↓ ↓ ↓ ↓ ↓

// @flow strict
import type { Element } from 'react';
import sx from '@adeira/sx';
export default function Example(): Element<'button'> {
  return (
    <button
      className={__styles_23kAuc('bg-blue-500', 'hover:bg-blue-700', 'text-white', 'font-bold')}
      type="button"
    >
      Button
    </button>
  );
} // eslint-disable-next-line no-unused-vars

const styles = 'Here I am';

const __styles_23kAuc = sx.create({
  'bg-blue-500': {
    '--tw-bg-opacity': '1',
    'backgroundColor': 'rgba(59, 130, 246, var(--tw-bg-opacity))',
  },
  'hover:bg-blue-700': {
    ':hover': {
      '--tw-bg-opacity': '1',
      'backgroundColor': 'rgba(29, 78, 216, var(--tw-bg-opacity))',
    },
  },
  'text-white': {
    '--tw-text-opacity': '1',
    'color': 'rgba(255, 255, 255, var(--tw-text-opacity))',
  },
  'font-bold': {
    fontWeight: 700,
  },
});


`;

exports[`transform SX Tailwind sx-already-imported.js: sx-already-imported.js 1`] = `

// @flow

import type { Node } from 'react';
import sx from '@adeira/sx';

export default function Example(): Node {
  return (
    <div>
      <div className={styles('text-red')}>Red text</div>
      <button sxt="bg-blue-500 hover:bg-blue-700 text-white font-bold" type="button">
        Button
      </button>
    </div>
  );
}

const styles = sx.create({
  'text-red': {
    color: 'red',
  },
});

      ↓ ↓ ↓ ↓ ↓ ↓

// @flow
import type { Node } from 'react';
import sx from '@adeira/sx';
export default function Example(): Node {
  return (
    <div>
      <div className={styles('text-red')}>Red text</div>
      <button
        className={__styles_1ZiIri('bg-blue-500', 'hover:bg-blue-700', 'text-white', 'font-bold')}
        type="button"
      >
        Button
      </button>
    </div>
  );
}
const styles = sx.create({
  'text-red': {
    color: 'red',
  },
});

const __styles_1ZiIri = sx.create({
  'bg-blue-500': {
    '--tw-bg-opacity': '1',
    'backgroundColor': 'rgba(59, 130, 246, var(--tw-bg-opacity))',
  },
  'hover:bg-blue-700': {
    ':hover': {
      '--tw-bg-opacity': '1',
      'backgroundColor': 'rgba(29, 78, 216, var(--tw-bg-opacity))',
    },
  },
  'text-white': {
    '--tw-text-opacity': '1',
    'color': 'rgba(255, 255, 255, var(--tw-text-opacity))',
  },
  'font-bold': {
    fontWeight: 700,
  },
});


`;

exports[`transform SX Tailwind sx-imported-alias.js: sx-imported-alias.js 1`] = `

// @flow

import type { Node } from 'react';
import { create } from '@adeira/sx';

export default function Example(): Node {
  return (
    <>
      <div className={styles('text-red')}>Red text</div>
      <button sxt="bg-blue-500 hover:bg-blue-700 text-white font-bold" type="button">
        Button
      </button>
    </>
  );
}

const styles = create({
  'text-red': {
    color: 'red',
  },
});

      ↓ ↓ ↓ ↓ ↓ ↓

// @flow
import type { Node } from 'react';
import { create } from '@adeira/sx';
import sx from '@adeira/sx';
export default function Example(): Node {
  return (
    <>
      <div className={styles('text-red')}>Red text</div>
      <button
        className={__styles_1DNe5q('bg-blue-500', 'hover:bg-blue-700', 'text-white', 'font-bold')}
        type="button"
      >
        Button
      </button>
    </>
  );
}
const styles = create({
  'text-red': {
    color: 'red',
  },
});

const __styles_1DNe5q = sx.create({
  'bg-blue-500': {
    '--tw-bg-opacity': '1',
    'backgroundColor': 'rgba(59, 130, 246, var(--tw-bg-opacity))',
  },
  'hover:bg-blue-700': {
    ':hover': {
      '--tw-bg-opacity': '1',
      'backgroundColor': 'rgba(29, 78, 216, var(--tw-bg-opacity))',
    },
  },
  'text-white': {
    '--tw-text-opacity': '1',
    'color': 'rgba(255, 255, 255, var(--tw-text-opacity))',
  },
  'font-bold': {
    fontWeight: 700,
  },
});


`;

exports[`transform SX Tailwind tailwind.js: tailwind.js 1`] = `

// @flow strict

import type { Element } from 'react';

export default function Example(): Element<'button'> {
  return (
    <button sxt="bg-blue-500 hover:bg-blue-700 text-white font-bold" type="button">
      Button
    </button>
  );
}

      ↓ ↓ ↓ ↓ ↓ ↓

// @flow strict
import type { Element } from 'react';
import sx from '@adeira/sx';
export default function Example(): Element<'button'> {
  return (
    <button
      className={__styles_2ffLsS('bg-blue-500', 'hover:bg-blue-700', 'text-white', 'font-bold')}
      type="button"
    >
      Button
    </button>
  );
}

const __styles_2ffLsS = sx.create({
  'bg-blue-500': {
    '--tw-bg-opacity': '1',
    'backgroundColor': 'rgba(59, 130, 246, var(--tw-bg-opacity))',
  },
  'hover:bg-blue-700': {
    ':hover': {
      '--tw-bg-opacity': '1',
      'backgroundColor': 'rgba(29, 78, 216, var(--tw-bg-opacity))',
    },
  },
  'text-white': {
    '--tw-text-opacity': '1',
    'color': 'rgba(255, 255, 255, var(--tw-text-opacity))',
  },
  'font-bold': {
    fontWeight: 700,
  },
});


`;

exports[`transform SX Tailwind tailwind-aliased.js: tailwind-aliased.js 1`] = `

// @flow strict

import type { Element } from 'react';

export default function Example(): Element<'button'> {
  return (
    <button sxt="bg-blue-500 hover:bg-blue-700 text-white font-bold" type="button">
      Button
    </button>
  );
}

      ↓ ↓ ↓ ↓ ↓ ↓

// @flow strict
import type { Element } from 'react';
import sx from '@adeira/sx';
export default function Example(): Element<'button'> {
  return (
    <button
      className={__styles_3dQzTp('bg-blue-500', 'hover:bg-blue-700', 'text-white', 'font-bold')}
      type="button"
    >
      Button
    </button>
  );
}

const __styles_3dQzTp = sx.create({
  'bg-blue-500': {
    '--tw-bg-opacity': '1',
    'backgroundColor': 'rgba(59, 130, 246, var(--tw-bg-opacity))',
  },
  'hover:bg-blue-700': {
    ':hover': {
      '--tw-bg-opacity': '1',
      'backgroundColor': 'rgba(29, 78, 216, var(--tw-bg-opacity))',
    },
  },
  'text-white': {
    '--tw-text-opacity': '1',
    'color': 'rgba(255, 255, 255, var(--tw-text-opacity))',
  },
  'font-bold': {
    fontWeight: 700,
  },
});


`;

exports[`transform SX Tailwind template-literal.js: template-literal.js 1`] = `

// @flow strict

import React, { type Node } from 'react';

export default function Example(): Node {
  return <div sxt={\`text-black bg-white\`}>Lorem lipsum</div>;
}

      ↓ ↓ ↓ ↓ ↓ ↓

// @flow strict
import React, { type Node } from 'react';
import sx from '@adeira/sx';
export default function Example(): Node {
  return <div className={__styles_3noU6Y('text-black', 'bg-white')}>Lorem lipsum</div>;
}

const __styles_3noU6Y = sx.create({
  'text-black': {
    '--tw-text-opacity': '1',
    'color': 'rgba(0, 0, 0, var(--tw-text-opacity))',
  },
  'bg-white': {
    '--tw-bg-opacity': '1',
    'backgroundColor': 'rgba(255, 255, 255, var(--tw-bg-opacity))',
  },
});


`;

exports[`transform SX Tailwind template-literal-condition.js: template-literal-condition.js 1`] = `

// @flow strict

import React, { type Node } from 'react';

export default function Example(): Node {
  const darkMode = true;
  return (
    <div sxt={\`px-4 font-bold \${darkMode ? \`text-white bg-black\` : 'text-black bg-white'} rounded\`}>
      Lorem lipsum
    </div>
  );
}

      ↓ ↓ ↓ ↓ ↓ ↓

// @flow strict
import React, { type Node } from 'react';
import sx from '@adeira/sx';
export default function Example(): Node {
  const darkMode = true;
  return (
    <div
      className={__styles_2LFzAe(
        'px-4',
        'font-bold',
        ...(darkMode ? ['text-white', 'bg-black'] : ['text-black', 'bg-white']),
        'rounded',
      )}
    >
      Lorem lipsum
    </div>
  );
}

const __styles_2LFzAe = sx.create({
  'text-white': {
    '--tw-text-opacity': '1',
    'color': 'rgba(255, 255, 255, var(--tw-text-opacity))',
  },
  'bg-black': {
    '--tw-bg-opacity': '1',
    'backgroundColor': 'rgba(0, 0, 0, var(--tw-bg-opacity))',
  },
  'text-black': {
    '--tw-text-opacity': '1',
    'color': 'rgba(0, 0, 0, var(--tw-text-opacity))',
  },
  'bg-white': {
    '--tw-bg-opacity': '1',
    'backgroundColor': 'rgba(255, 255, 255, var(--tw-bg-opacity))',
  },
  'px-4': {
    paddingLeft: '1rem',
    paddingRight: '1rem',
  },
  'font-bold': {
    fontWeight: 700,
  },
  'rounded': {
    borderRadius: '0.25rem',
  },
});


`;

exports[`transform SX Tailwind template-literal-expression.js: template-literal-expression.js 1`] = `

// @flow

import React, { type Node } from 'react';
import sx from '@adeira/sx';

export default function Example(): Node {
  return <div sxt={\`px-4 \${styles('customStyle')}\`}>Lorem lipsum</div>;
}

const styles = sx.create({
  customStyle: { transform: 'translateX(10px)' },
});

      ↓ ↓ ↓ ↓ ↓ ↓

// @flow
import React, { type Node } from 'react';
import sx from '@adeira/sx';
export default function Example(): Node {
  return <div className={\`\${__styles_4ozVnl('px-4')} \${styles('customStyle')}\`}>Lorem lipsum</div>;
}
const styles = sx.create({
  customStyle: {
    transform: 'translateX(10px)',
  },
});

const __styles_4ozVnl = sx.create({
  'px-4': {
    paddingLeft: '1rem',
    paddingRight: '1rem',
  },
});


`;
