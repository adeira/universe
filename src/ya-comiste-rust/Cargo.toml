[workspace]
members = [
  "server",
  "signedsource",
]

[workspace.metadata.raze]
# The path at which to write output files.
#
# `cargo raze` will generate Bazel-compatible BUILD files into this path.
# This can either be a relative path (e.g. "foo/bar"), relative to this
# Cargo.toml file; or relative to the Bazel workspace root (e.g. "//foo/bar").
workspace_path = "//third_party/cargo"

# This causes aliases for dependencies to be rendered in the BUILD
# file located next to this `Cargo.toml` file.
package_aliases_dir = "cargo"

# The set of targets to generate BUILD rules for.
targets = [
  "x86_64-apple-darwin",
  "x86_64-unknown-linux-gnu",
]

# The two acceptable options are "Remote" and "Vendored" which
# is used to indicate whether the user is using a non-vendored or
# vendored set of dependencies.
genmode = "Remote"

[workspace.metadata.raze.crates.gif.'*']
data_dependencies = [
  "README.md",
]

[workspace.metadata.raze.crates.image.'*']
data_dependencies = [
  "README.md",
]

[workspace.metadata.raze.crates.juniper.'0.15.*']
data_dependencies = [
  "src/introspection/query.graphql",
  "src/introspection/query_without_descriptions.graphql",
]

[workspace.metadata.raze.crates.ring.'*']
compile_data_attr = "glob([\"**/*.der\"])"
