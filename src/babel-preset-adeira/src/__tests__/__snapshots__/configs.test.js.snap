// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`emits correct config for target 'flow' and environment '{"browsers":["last 2 versions","ie >= 11"]}' and reactEnvironment 'automatic' 1`] = `
{
  "presets": [],
  "plugins": [
    "<BABEL_PRESET_ROOT>/src/dev-expression-check.js",
    "<BABEL_PRESET_ROOT>/src/dev-declaration.js"
  ],
  "parserOpts": {
    "plugins": [
      "jsx",
      "flow",
      "flowComments",
      "bigInt",
      "throwExpressions",
      "classPrivateProperties",
      "classProperties",
      "numericSeparator",
      "objectRestSpread"
    ]
  },
  "retainLines": true
}
`;

exports[`emits correct config for target 'flow' and environment '{"browsers":["last 2 versions","ie >= 11"]}' and reactEnvironment 'classic' 1`] = `
{
  "presets": [],
  "plugins": [
    "<BABEL_PRESET_ROOT>/src/dev-expression-check.js",
    "<BABEL_PRESET_ROOT>/src/dev-declaration.js"
  ],
  "parserOpts": {
    "plugins": [
      "jsx",
      "flow",
      "flowComments",
      "bigInt",
      "throwExpressions",
      "classPrivateProperties",
      "classProperties",
      "numericSeparator",
      "objectRestSpread"
    ]
  },
  "retainLines": true
}
`;

exports[`emits correct config for target 'flow' and environment '{"node":"current"}' and reactEnvironment 'automatic' 1`] = `
{
  "presets": [],
  "plugins": [
    "<BABEL_PRESET_ROOT>/src/dev-expression-check.js",
    "<BABEL_PRESET_ROOT>/src/dev-declaration.js"
  ],
  "parserOpts": {
    "plugins": [
      "jsx",
      "flow",
      "flowComments",
      "bigInt",
      "throwExpressions",
      "classPrivateProperties",
      "classProperties",
      "numericSeparator",
      "objectRestSpread"
    ]
  },
  "retainLines": true
}
`;

exports[`emits correct config for target 'flow' and environment '{"node":"current"}' and reactEnvironment 'classic' 1`] = `
{
  "presets": [],
  "plugins": [
    "<BABEL_PRESET_ROOT>/src/dev-expression-check.js",
    "<BABEL_PRESET_ROOT>/src/dev-declaration.js"
  ],
  "parserOpts": {
    "plugins": [
      "jsx",
      "flow",
      "flowComments",
      "bigInt",
      "throwExpressions",
      "classPrivateProperties",
      "classProperties",
      "numericSeparator",
      "objectRestSpread"
    ]
  },
  "retainLines": true
}
`;

exports[`emits correct config for target 'flow' and environment 'undefined' and reactEnvironment 'automatic' 1`] = `
{
  "presets": [],
  "plugins": [
    "<BABEL_PRESET_ROOT>/src/dev-expression-check.js",
    "<BABEL_PRESET_ROOT>/src/dev-declaration.js"
  ],
  "parserOpts": {
    "plugins": [
      "jsx",
      "flow",
      "flowComments",
      "bigInt",
      "throwExpressions",
      "classPrivateProperties",
      "classProperties",
      "numericSeparator",
      "objectRestSpread"
    ]
  },
  "retainLines": true
}
`;

exports[`emits correct config for target 'flow' and environment 'undefined' and reactEnvironment 'classic' 1`] = `
{
  "presets": [],
  "plugins": [
    "<BABEL_PRESET_ROOT>/src/dev-expression-check.js",
    "<BABEL_PRESET_ROOT>/src/dev-declaration.js"
  ],
  "parserOpts": {
    "plugins": [
      "jsx",
      "flow",
      "flowComments",
      "bigInt",
      "throwExpressions",
      "classPrivateProperties",
      "classProperties",
      "numericSeparator",
      "objectRestSpread"
    ]
  },
  "retainLines": true
}
`;

exports[`emits correct config for target 'js' and environment '{"browsers":["last 2 versions","ie >= 11"]}' and reactEnvironment 'automatic' 1`] = `
{
  "presets": [
    [
      "@babel/preset-env",
      {
        "debug": false,
        "modules": "commonjs",
        "targets": {
          "browsers": [
            "last 2 versions",
            "ie >= 11"
          ]
        },
        "bugfixes": true
      }
    ],
    [
      "@babel/preset-react",
      {
        "runtime": "automatic"
      }
    ]
  ],
  "plugins": [
    "<BABEL_PRESET_ROOT>/src/dev-expression-check.js",
    "<BABEL_PRESET_ROOT>/src/dev-expression.js",
    "<BABEL_PRESET_ROOT>/src/adeira-js-invariant.js",
    "<BABEL_PRESET_ROOT>/src/adeira-js-warning.js",
    [
      "@babel/plugin-transform-flow-strip-types",
      {
        "allowDeclareFields": true
      }
    ],
    "@babel/plugin-proposal-class-properties",
    "@babel/plugin-proposal-object-rest-spread",
    "@babel/plugin-proposal-numeric-separator",
    "@babel/plugin-proposal-throw-expressions",
    [
      "@babel/plugin-transform-runtime",
      {
        "useESModules": false
      }
    ]
  ],
  "parserOpts": {
    "plugins": [
      "jsx",
      "flow",
      "flowComments",
      "bigInt",
      "throwExpressions"
    ]
  },
  "retainLines": false
}
`;

exports[`emits correct config for target 'js' and environment '{"browsers":["last 2 versions","ie >= 11"]}' and reactEnvironment 'classic' 1`] = `
{
  "presets": [
    [
      "@babel/preset-env",
      {
        "debug": false,
        "modules": "commonjs",
        "targets": {
          "browsers": [
            "last 2 versions",
            "ie >= 11"
          ]
        },
        "bugfixes": true
      }
    ],
    [
      "@babel/preset-react",
      {
        "runtime": "classic"
      }
    ]
  ],
  "plugins": [
    "<BABEL_PRESET_ROOT>/src/dev-expression-check.js",
    "<BABEL_PRESET_ROOT>/src/dev-expression.js",
    "<BABEL_PRESET_ROOT>/src/adeira-js-invariant.js",
    "<BABEL_PRESET_ROOT>/src/adeira-js-warning.js",
    [
      "@babel/plugin-transform-flow-strip-types",
      {
        "allowDeclareFields": true
      }
    ],
    "@babel/plugin-proposal-class-properties",
    "@babel/plugin-proposal-object-rest-spread",
    "@babel/plugin-proposal-numeric-separator",
    "@babel/plugin-proposal-throw-expressions",
    [
      "@babel/plugin-transform-runtime",
      {
        "useESModules": false
      }
    ]
  ],
  "parserOpts": {
    "plugins": [
      "jsx",
      "flow",
      "flowComments",
      "bigInt",
      "throwExpressions"
    ]
  },
  "retainLines": false
}
`;

exports[`emits correct config for target 'js' and environment '{"node":"current"}' and reactEnvironment 'automatic' 1`] = `
{
  "presets": [
    [
      "@babel/preset-env",
      {
        "debug": false,
        "modules": "commonjs",
        "targets": {
          "node": "current"
        },
        "bugfixes": true
      }
    ],
    [
      "@babel/preset-react",
      {
        "runtime": "automatic"
      }
    ]
  ],
  "plugins": [
    "<BABEL_PRESET_ROOT>/src/dev-expression-check.js",
    "<BABEL_PRESET_ROOT>/src/dev-expression.js",
    "<BABEL_PRESET_ROOT>/src/adeira-js-invariant.js",
    "<BABEL_PRESET_ROOT>/src/adeira-js-warning.js",
    [
      "@babel/plugin-transform-flow-strip-types",
      {
        "allowDeclareFields": true
      }
    ],
    "@babel/plugin-proposal-class-properties",
    "@babel/plugin-proposal-object-rest-spread",
    "@babel/plugin-proposal-numeric-separator",
    "@babel/plugin-proposal-throw-expressions",
    [
      "@babel/plugin-transform-runtime",
      {
        "useESModules": false
      }
    ]
  ],
  "parserOpts": {
    "plugins": [
      "jsx",
      "flow",
      "flowComments",
      "bigInt",
      "throwExpressions"
    ]
  },
  "retainLines": false
}
`;

exports[`emits correct config for target 'js' and environment '{"node":"current"}' and reactEnvironment 'classic' 1`] = `
{
  "presets": [
    [
      "@babel/preset-env",
      {
        "debug": false,
        "modules": "commonjs",
        "targets": {
          "node": "current"
        },
        "bugfixes": true
      }
    ],
    [
      "@babel/preset-react",
      {
        "runtime": "classic"
      }
    ]
  ],
  "plugins": [
    "<BABEL_PRESET_ROOT>/src/dev-expression-check.js",
    "<BABEL_PRESET_ROOT>/src/dev-expression.js",
    "<BABEL_PRESET_ROOT>/src/adeira-js-invariant.js",
    "<BABEL_PRESET_ROOT>/src/adeira-js-warning.js",
    [
      "@babel/plugin-transform-flow-strip-types",
      {
        "allowDeclareFields": true
      }
    ],
    "@babel/plugin-proposal-class-properties",
    "@babel/plugin-proposal-object-rest-spread",
    "@babel/plugin-proposal-numeric-separator",
    "@babel/plugin-proposal-throw-expressions",
    [
      "@babel/plugin-transform-runtime",
      {
        "useESModules": false
      }
    ]
  ],
  "parserOpts": {
    "plugins": [
      "jsx",
      "flow",
      "flowComments",
      "bigInt",
      "throwExpressions"
    ]
  },
  "retainLines": false
}
`;

exports[`emits correct config for target 'js' and environment 'undefined' and reactEnvironment 'automatic' 1`] = `
{
  "presets": [
    [
      "@babel/preset-env",
      {
        "debug": false,
        "modules": "commonjs",
        "targets": {
          "node": "current",
          "browsers": [
            "last 2 versions",
            "ie >= 11"
          ]
        },
        "bugfixes": true
      }
    ],
    [
      "@babel/preset-react",
      {
        "runtime": "automatic"
      }
    ]
  ],
  "plugins": [
    "<BABEL_PRESET_ROOT>/src/dev-expression-check.js",
    "<BABEL_PRESET_ROOT>/src/dev-expression.js",
    "<BABEL_PRESET_ROOT>/src/adeira-js-invariant.js",
    "<BABEL_PRESET_ROOT>/src/adeira-js-warning.js",
    [
      "@babel/plugin-transform-flow-strip-types",
      {
        "allowDeclareFields": true
      }
    ],
    "@babel/plugin-proposal-class-properties",
    "@babel/plugin-proposal-object-rest-spread",
    "@babel/plugin-proposal-numeric-separator",
    "@babel/plugin-proposal-throw-expressions",
    [
      "@babel/plugin-transform-runtime",
      {
        "useESModules": false
      }
    ]
  ],
  "parserOpts": {
    "plugins": [
      "jsx",
      "flow",
      "flowComments",
      "bigInt",
      "throwExpressions"
    ]
  },
  "retainLines": false
}
`;

exports[`emits correct config for target 'js' and environment 'undefined' and reactEnvironment 'classic' 1`] = `
{
  "presets": [
    [
      "@babel/preset-env",
      {
        "debug": false,
        "modules": "commonjs",
        "targets": {
          "node": "current",
          "browsers": [
            "last 2 versions",
            "ie >= 11"
          ]
        },
        "bugfixes": true
      }
    ],
    [
      "@babel/preset-react",
      {
        "runtime": "classic"
      }
    ]
  ],
  "plugins": [
    "<BABEL_PRESET_ROOT>/src/dev-expression-check.js",
    "<BABEL_PRESET_ROOT>/src/dev-expression.js",
    "<BABEL_PRESET_ROOT>/src/adeira-js-invariant.js",
    "<BABEL_PRESET_ROOT>/src/adeira-js-warning.js",
    [
      "@babel/plugin-transform-flow-strip-types",
      {
        "allowDeclareFields": true
      }
    ],
    "@babel/plugin-proposal-class-properties",
    "@babel/plugin-proposal-object-rest-spread",
    "@babel/plugin-proposal-numeric-separator",
    "@babel/plugin-proposal-throw-expressions",
    [
      "@babel/plugin-transform-runtime",
      {
        "useESModules": false
      }
    ]
  ],
  "parserOpts": {
    "plugins": [
      "jsx",
      "flow",
      "flowComments",
      "bigInt",
      "throwExpressions"
    ]
  },
  "retainLines": false
}
`;

exports[`emits correct config for target 'js-esm' and environment '{"browsers":["last 2 versions","ie >= 11"]}' and reactEnvironment 'automatic' 1`] = `
{
  "presets": [
    [
      "@babel/preset-env",
      {
        "debug": false,
        "modules": false,
        "targets": {
          "browsers": [
            "last 2 versions",
            "ie >= 11"
          ]
        },
        "bugfixes": true
      }
    ],
    [
      "@babel/preset-react",
      {
        "runtime": "automatic"
      }
    ]
  ],
  "plugins": [
    "<BABEL_PRESET_ROOT>/src/dev-expression-check.js",
    "<BABEL_PRESET_ROOT>/src/dev-expression.js",
    "<BABEL_PRESET_ROOT>/src/adeira-js-invariant.js",
    "<BABEL_PRESET_ROOT>/src/adeira-js-warning.js",
    [
      "@babel/plugin-transform-flow-strip-types",
      {
        "allowDeclareFields": true
      }
    ],
    "@babel/plugin-proposal-class-properties",
    "@babel/plugin-proposal-object-rest-spread",
    "@babel/plugin-proposal-numeric-separator",
    "@babel/plugin-proposal-throw-expressions",
    [
      "@babel/plugin-transform-runtime",
      {
        "useESModules": true
      }
    ]
  ],
  "parserOpts": {
    "plugins": [
      "jsx",
      "flow",
      "flowComments",
      "bigInt",
      "throwExpressions"
    ]
  },
  "retainLines": false
}
`;

exports[`emits correct config for target 'js-esm' and environment '{"browsers":["last 2 versions","ie >= 11"]}' and reactEnvironment 'classic' 1`] = `
{
  "presets": [
    [
      "@babel/preset-env",
      {
        "debug": false,
        "modules": false,
        "targets": {
          "browsers": [
            "last 2 versions",
            "ie >= 11"
          ]
        },
        "bugfixes": true
      }
    ],
    [
      "@babel/preset-react",
      {
        "runtime": "classic"
      }
    ]
  ],
  "plugins": [
    "<BABEL_PRESET_ROOT>/src/dev-expression-check.js",
    "<BABEL_PRESET_ROOT>/src/dev-expression.js",
    "<BABEL_PRESET_ROOT>/src/adeira-js-invariant.js",
    "<BABEL_PRESET_ROOT>/src/adeira-js-warning.js",
    [
      "@babel/plugin-transform-flow-strip-types",
      {
        "allowDeclareFields": true
      }
    ],
    "@babel/plugin-proposal-class-properties",
    "@babel/plugin-proposal-object-rest-spread",
    "@babel/plugin-proposal-numeric-separator",
    "@babel/plugin-proposal-throw-expressions",
    [
      "@babel/plugin-transform-runtime",
      {
        "useESModules": true
      }
    ]
  ],
  "parserOpts": {
    "plugins": [
      "jsx",
      "flow",
      "flowComments",
      "bigInt",
      "throwExpressions"
    ]
  },
  "retainLines": false
}
`;

exports[`emits correct config for target 'js-esm' and environment '{"node":"current"}' and reactEnvironment 'automatic' 1`] = `
{
  "presets": [
    [
      "@babel/preset-env",
      {
        "debug": false,
        "modules": false,
        "targets": {
          "node": "current"
        },
        "bugfixes": true
      }
    ],
    [
      "@babel/preset-react",
      {
        "runtime": "automatic"
      }
    ]
  ],
  "plugins": [
    "<BABEL_PRESET_ROOT>/src/dev-expression-check.js",
    "<BABEL_PRESET_ROOT>/src/dev-expression.js",
    "<BABEL_PRESET_ROOT>/src/adeira-js-invariant.js",
    "<BABEL_PRESET_ROOT>/src/adeira-js-warning.js",
    [
      "@babel/plugin-transform-flow-strip-types",
      {
        "allowDeclareFields": true
      }
    ],
    "@babel/plugin-proposal-class-properties",
    "@babel/plugin-proposal-object-rest-spread",
    "@babel/plugin-proposal-numeric-separator",
    "@babel/plugin-proposal-throw-expressions",
    [
      "@babel/plugin-transform-runtime",
      {
        "useESModules": true
      }
    ]
  ],
  "parserOpts": {
    "plugins": [
      "jsx",
      "flow",
      "flowComments",
      "bigInt",
      "throwExpressions"
    ]
  },
  "retainLines": false
}
`;

exports[`emits correct config for target 'js-esm' and environment '{"node":"current"}' and reactEnvironment 'classic' 1`] = `
{
  "presets": [
    [
      "@babel/preset-env",
      {
        "debug": false,
        "modules": false,
        "targets": {
          "node": "current"
        },
        "bugfixes": true
      }
    ],
    [
      "@babel/preset-react",
      {
        "runtime": "classic"
      }
    ]
  ],
  "plugins": [
    "<BABEL_PRESET_ROOT>/src/dev-expression-check.js",
    "<BABEL_PRESET_ROOT>/src/dev-expression.js",
    "<BABEL_PRESET_ROOT>/src/adeira-js-invariant.js",
    "<BABEL_PRESET_ROOT>/src/adeira-js-warning.js",
    [
      "@babel/plugin-transform-flow-strip-types",
      {
        "allowDeclareFields": true
      }
    ],
    "@babel/plugin-proposal-class-properties",
    "@babel/plugin-proposal-object-rest-spread",
    "@babel/plugin-proposal-numeric-separator",
    "@babel/plugin-proposal-throw-expressions",
    [
      "@babel/plugin-transform-runtime",
      {
        "useESModules": true
      }
    ]
  ],
  "parserOpts": {
    "plugins": [
      "jsx",
      "flow",
      "flowComments",
      "bigInt",
      "throwExpressions"
    ]
  },
  "retainLines": false
}
`;

exports[`emits correct config for target 'js-esm' and environment 'undefined' and reactEnvironment 'automatic' 1`] = `
{
  "presets": [
    [
      "@babel/preset-env",
      {
        "debug": false,
        "modules": false,
        "targets": {
          "node": "current",
          "browsers": [
            "last 2 versions",
            "ie >= 11"
          ]
        },
        "bugfixes": true
      }
    ],
    [
      "@babel/preset-react",
      {
        "runtime": "automatic"
      }
    ]
  ],
  "plugins": [
    "<BABEL_PRESET_ROOT>/src/dev-expression-check.js",
    "<BABEL_PRESET_ROOT>/src/dev-expression.js",
    "<BABEL_PRESET_ROOT>/src/adeira-js-invariant.js",
    "<BABEL_PRESET_ROOT>/src/adeira-js-warning.js",
    [
      "@babel/plugin-transform-flow-strip-types",
      {
        "allowDeclareFields": true
      }
    ],
    "@babel/plugin-proposal-class-properties",
    "@babel/plugin-proposal-object-rest-spread",
    "@babel/plugin-proposal-numeric-separator",
    "@babel/plugin-proposal-throw-expressions",
    [
      "@babel/plugin-transform-runtime",
      {
        "useESModules": true
      }
    ]
  ],
  "parserOpts": {
    "plugins": [
      "jsx",
      "flow",
      "flowComments",
      "bigInt",
      "throwExpressions"
    ]
  },
  "retainLines": false
}
`;

exports[`emits correct config for target 'js-esm' and environment 'undefined' and reactEnvironment 'classic' 1`] = `
{
  "presets": [
    [
      "@babel/preset-env",
      {
        "debug": false,
        "modules": false,
        "targets": {
          "node": "current",
          "browsers": [
            "last 2 versions",
            "ie >= 11"
          ]
        },
        "bugfixes": true
      }
    ],
    [
      "@babel/preset-react",
      {
        "runtime": "classic"
      }
    ]
  ],
  "plugins": [
    "<BABEL_PRESET_ROOT>/src/dev-expression-check.js",
    "<BABEL_PRESET_ROOT>/src/dev-expression.js",
    "<BABEL_PRESET_ROOT>/src/adeira-js-invariant.js",
    "<BABEL_PRESET_ROOT>/src/adeira-js-warning.js",
    [
      "@babel/plugin-transform-flow-strip-types",
      {
        "allowDeclareFields": true
      }
    ],
    "@babel/plugin-proposal-class-properties",
    "@babel/plugin-proposal-object-rest-spread",
    "@babel/plugin-proposal-numeric-separator",
    "@babel/plugin-proposal-throw-expressions",
    [
      "@babel/plugin-transform-runtime",
      {
        "useESModules": true
      }
    ]
  ],
  "parserOpts": {
    "plugins": [
      "jsx",
      "flow",
      "flowComments",
      "bigInt",
      "throwExpressions"
    ]
  },
  "retainLines": false
}
`;
