// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`matches expected output: async-function.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable no-return-await */

export default async function test(): Promise<string> {
  return await 'this';
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable no-return-await */

export default async function test(): Promise<string> {
  return await 'this';
}
`;

exports[`matches expected output: async-function.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable no-return-await */

export default async function test(): Promise<string> {
  return await 'this';
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = test;

/* eslint-disable no-return-await */

async function test() {
  return await 'this';
}
`;

exports[`matches expected output: async-function.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable no-return-await */

export default async function test(): Promise<string> {
  return await 'this';
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~


/* eslint-disable no-return-await */

export default async function test() {
  return await 'this';
}
`;

exports[`matches expected output: babel-issue-8684.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict
// SEE: https://github.com/babel/babel/issues/8684
/* eslint-disable */

const aaa = 1;

// $FlowExpectedError[incompatible-type]: this line should stay here because \`aaa\` is incompatible with \`bbb\`
const bbb: string = aaa;

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow strict
// SEE: https://github.com/babel/babel/issues/8684
/* eslint-disable */

const aaa = 1;

// $FlowExpectedError[incompatible-type]: this line should stay here because \`aaa\` is incompatible with \`bbb\`
const bbb: string = aaa;
`;

exports[`matches expected output: babel-issue-8684.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict
// SEE: https://github.com/babel/babel/issues/8684
/* eslint-disable */

const aaa = 1;

// $FlowExpectedError[incompatible-type]: this line should stay here because \`aaa\` is incompatible with \`bbb\`
const bbb: string = aaa;

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

// SEE: https://github.com/babel/babel/issues/8684
/* eslint-disable */

const aaa = 1;

// $FlowExpectedError[incompatible-type]: this line should stay here because \`aaa\` is incompatible with \`bbb\`
const bbb = aaa;
`;

exports[`matches expected output: babel-issue-8684.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict
// SEE: https://github.com/babel/babel/issues/8684
/* eslint-disable */

const aaa = 1;

// $FlowExpectedError[incompatible-type]: this line should stay here because \`aaa\` is incompatible with \`bbb\`
const bbb: string = aaa;

~~~~~~~~~~ OUTPUT ~~~~~~~~~~

// SEE: https://github.com/babel/babel/issues/8684
/* eslint-disable */

const aaa = 1;

// $FlowExpectedError[incompatible-type]: this line should stay here because \`aaa\` is incompatible with \`bbb\`
const bbb = aaa;
`;

exports[`matches expected output: babel-issue-9514.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

// See: https://github.com/babel/babel/issues/9514

type $FragmentRef<T> = { +$fragmentRefs: $PropertyType<T, '$refType'>, ... };

// prettier-ignore
export type $RelayProps<Props, RelayPropT> = $ObjMap<
  $Diff<Props, { relay: RelayPropT | void, ... }>,
  (<T: () => void>( T) =>  T) &
  (<T: { +$refType: any, ... }>( T) =>  $FragmentRef<T>) &
  (<T: { +$refType: any, ... }>(?T) => ?$FragmentRef<T>) &
  (<T: { +$refType: any, ... }>( $ReadOnlyArray< T>) =>  $ReadOnlyArray< $FragmentRef<T>>) &
  (<T: { +$refType: any, ... }>(?$ReadOnlyArray< T>) => ?$ReadOnlyArray< $FragmentRef<T>>) &
  (<T: { +$refType: any, ... }>( $ReadOnlyArray<?T>) =>  $ReadOnlyArray<?$FragmentRef<T>>) &
  (<T: { +$refType: any, ... }>(?$ReadOnlyArray<?T>) => ?$ReadOnlyArray<?$FragmentRef<T>>) &
  (<T>(T) => T)
>

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow

// See: https://github.com/babel/babel/issues/9514

type $FragmentRef<T> = { +$fragmentRefs: $PropertyType<T, '$refType'>, ...};

// prettier-ignore
export type $RelayProps<Props, RelayPropT> = $ObjMap<
$Diff<Props, { relay: RelayPropT | void, ...}>,
(<T: () => void>(T) => T) & (
<T: { +$refType: any, ...}>(T) => $FragmentRef<T>) & (
<T: { +$refType: any, ...}>(?T) => ?$FragmentRef<T>) & (
<T: { +$refType: any, ...}>($ReadOnlyArray<T>) => $ReadOnlyArray<$FragmentRef<T>>) & (
<T: { +$refType: any, ...}>(?$ReadOnlyArray<T>) => ?$ReadOnlyArray<$FragmentRef<T>>) & (
<T: { +$refType: any, ...}>($ReadOnlyArray<?T>) => $ReadOnlyArray<?$FragmentRef<T>>) & (
<T: { +$refType: any, ...}>(?$ReadOnlyArray<?T>) => ?$ReadOnlyArray<?$FragmentRef<T>>) & (
<T>(T) => T)>;
`;

exports[`matches expected output: babel-issue-9514.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

// See: https://github.com/babel/babel/issues/9514

type $FragmentRef<T> = { +$fragmentRefs: $PropertyType<T, '$refType'>, ... };

// prettier-ignore
export type $RelayProps<Props, RelayPropT> = $ObjMap<
  $Diff<Props, { relay: RelayPropT | void, ... }>,
  (<T: () => void>( T) =>  T) &
  (<T: { +$refType: any, ... }>( T) =>  $FragmentRef<T>) &
  (<T: { +$refType: any, ... }>(?T) => ?$FragmentRef<T>) &
  (<T: { +$refType: any, ... }>( $ReadOnlyArray< T>) =>  $ReadOnlyArray< $FragmentRef<T>>) &
  (<T: { +$refType: any, ... }>(?$ReadOnlyArray< T>) => ?$ReadOnlyArray< $FragmentRef<T>>) &
  (<T: { +$refType: any, ... }>( $ReadOnlyArray<?T>) =>  $ReadOnlyArray<?$FragmentRef<T>>) &
  (<T: { +$refType: any, ... }>(?$ReadOnlyArray<?T>) => ?$ReadOnlyArray<?$FragmentRef<T>>) &
  (<T>(T) => T)
>

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";
`;

exports[`matches expected output: babel-issue-9514.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

// See: https://github.com/babel/babel/issues/9514

type $FragmentRef<T> = { +$fragmentRefs: $PropertyType<T, '$refType'>, ... };

// prettier-ignore
export type $RelayProps<Props, RelayPropT> = $ObjMap<
  $Diff<Props, { relay: RelayPropT | void, ... }>,
  (<T: () => void>( T) =>  T) &
  (<T: { +$refType: any, ... }>( T) =>  $FragmentRef<T>) &
  (<T: { +$refType: any, ... }>(?T) => ?$FragmentRef<T>) &
  (<T: { +$refType: any, ... }>( $ReadOnlyArray< T>) =>  $ReadOnlyArray< $FragmentRef<T>>) &
  (<T: { +$refType: any, ... }>(?$ReadOnlyArray< T>) => ?$ReadOnlyArray< $FragmentRef<T>>) &
  (<T: { +$refType: any, ... }>( $ReadOnlyArray<?T>) =>  $ReadOnlyArray<?$FragmentRef<T>>) &
  (<T: { +$refType: any, ... }>(?$ReadOnlyArray<?T>) => ?$ReadOnlyArray<?$FragmentRef<T>>) &
  (<T>(T) => T)
>

~~~~~~~~~~ OUTPUT ~~~~~~~~~~

`;

exports[`matches expected output: babel-issue-9810.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

// See: https://github.com/babel/babel/issues/9810

/*:: type TestType = any; */

const executeNodeScript = (
  aaa /*: string */,
  bbb /*: number */,
  ccc /*: any */,
) /*: TestType */ => {
  return [aaa, bbb, ccc];
};

const supportsESM = (target: string) /*: boolean %checks */ => {
  return target === 'js-esm';
};

module.exports = { executeNodeScript, supportsESM };

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow

// See: https://github.com/babel/babel/issues/9810

type TestType = any;

const executeNodeScript = (
aaa: string,
bbb: number,
ccc: any)
: TestType => {
  return [aaa, bbb, ccc];
};

const supportsESM = (target: string): boolean %checks => {
  return target === 'js-esm';
};

module.exports = { executeNodeScript, supportsESM };
`;

exports[`matches expected output: babel-issue-9810.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

// See: https://github.com/babel/babel/issues/9810

/*:: type TestType = any; */

const executeNodeScript = (
  aaa /*: string */,
  bbb /*: number */,
  ccc /*: any */,
) /*: TestType */ => {
  return [aaa, bbb, ccc];
};

const supportsESM = (target: string) /*: boolean %checks */ => {
  return target === 'js-esm';
};

module.exports = { executeNodeScript, supportsESM };

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

// See: https://github.com/babel/babel/issues/9810

const executeNodeScript = (aaa, bbb, ccc) => {
  return [aaa, bbb, ccc];
};
const supportsESM = target => {
  return target === 'js-esm';
};
module.exports = {
  executeNodeScript,
  supportsESM
};
`;

exports[`matches expected output: babel-issue-9810.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

// See: https://github.com/babel/babel/issues/9810

/*:: type TestType = any; */

const executeNodeScript = (
  aaa /*: string */,
  bbb /*: number */,
  ccc /*: any */,
) /*: TestType */ => {
  return [aaa, bbb, ccc];
};

const supportsESM = (target: string) /*: boolean %checks */ => {
  return target === 'js-esm';
};

module.exports = { executeNodeScript, supportsESM };

~~~~~~~~~~ OUTPUT ~~~~~~~~~~


// See: https://github.com/babel/babel/issues/9810

const executeNodeScript = (aaa, bbb, ccc) => {
  return [aaa, bbb, ccc];
};
const supportsESM = target => {
  return target === 'js-esm';
};
module.exports = {
  executeNodeScript,
  supportsESM
};
`;

exports[`matches expected output: babel-issue-9921.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
#!/usr/bin/env node

// @flow strict-local

// See: https://github.com/babel/babel/issues/9921

/* eslint-disable */

new Set<() => void>([]);

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
#!/usr/bin/env node

// @flow strict-local

// See: https://github.com/babel/babel/issues/9921

/* eslint-disable */

new Set<() => void>([]);
`;

exports[`matches expected output: babel-issue-9921.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
#!/usr/bin/env node

// @flow strict-local

// See: https://github.com/babel/babel/issues/9921

/* eslint-disable */

new Set<() => void>([]);

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
#!/usr/bin/env node

// See: https://github.com/babel/babel/issues/9921

/* eslint-disable */
"use strict";

new Set([]);
`;

exports[`matches expected output: babel-issue-9921.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
#!/usr/bin/env node

// @flow strict-local

// See: https://github.com/babel/babel/issues/9921

/* eslint-disable */

new Set<() => void>([]);

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
#!/usr/bin/env node

// See: https://github.com/babel/babel/issues/9921

/* eslint-disable */
new Set([]);
`;

exports[`matches expected output: babel-issue-10040.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

// Babel is currently losing \` ... \` while  tranpiling this type.
// See: https://github.com/babel/babel/issues/10040

export type ExplicitlyInexact = { foo: number, ... };

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow strict

// Babel is currently losing \` ... \` while  tranpiling this type.
// See: https://github.com/babel/babel/issues/10040

export type ExplicitlyInexact = { foo: number, ...};
`;

exports[`matches expected output: babel-issue-10040.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

// Babel is currently losing \` ... \` while  tranpiling this type.
// See: https://github.com/babel/babel/issues/10040

export type ExplicitlyInexact = { foo: number, ... };

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";
`;

exports[`matches expected output: babel-issue-10040.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

// Babel is currently losing \` ... \` while  tranpiling this type.
// See: https://github.com/babel/babel/issues/10040

export type ExplicitlyInexact = { foo: number, ... };

~~~~~~~~~~ OUTPUT ~~~~~~~~~~

`;

exports[`matches expected output: babel-issue-10367.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

// https://github.com/babel/babel/issues/10367
// https://github.com/babel/babel/pull/10447

const re = /(?<x>.*)/u; // eslint-disable-line no-unused-vars

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow strict

// https://github.com/babel/babel/issues/10367
// https://github.com/babel/babel/pull/10447

const re = /(?<x>.*)/u; // eslint-disable-line no-unused-vars
`;

exports[`matches expected output: babel-issue-10367.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

// https://github.com/babel/babel/issues/10367
// https://github.com/babel/babel/pull/10447

const re = /(?<x>.*)/u; // eslint-disable-line no-unused-vars

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

// https://github.com/babel/babel/issues/10367
// https://github.com/babel/babel/pull/10447

const re = /(?<x>.*)/u; // eslint-disable-line no-unused-vars
`;

exports[`matches expected output: babel-issue-10367.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

// https://github.com/babel/babel/issues/10367
// https://github.com/babel/babel/pull/10447

const re = /(?<x>.*)/u; // eslint-disable-line no-unused-vars

~~~~~~~~~~ OUTPUT ~~~~~~~~~~


// https://github.com/babel/babel/issues/10367
// https://github.com/babel/babel/pull/10447

const re = /(?<x>.*)/u; // eslint-disable-line no-unused-vars
`;

exports[`matches expected output: bigint.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

const theBiggestInt = 9007199254740991n;

const alsoHuge = BigInt(9007199254740991);
// ↪ 9007199254740991n

const hugeButString = BigInt('9007199254740991');
// ↪ 9007199254740991n

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

const theBiggestInt = 9007199254740991n;

const alsoHuge = BigInt(9007199254740991);
// ↪ 9007199254740991n

const hugeButString = BigInt('9007199254740991');
// ↪ 9007199254740991n
`;

exports[`matches expected output: bigint.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

const theBiggestInt = 9007199254740991n;

const alsoHuge = BigInt(9007199254740991);
// ↪ 9007199254740991n

const hugeButString = BigInt('9007199254740991');
// ↪ 9007199254740991n

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

/* eslint-disable */

const theBiggestInt = 9007199254740991n;
const alsoHuge = BigInt(9007199254740991);
// ↪ 9007199254740991n

const hugeButString = BigInt('9007199254740991');
// ↪ 9007199254740991n
`;

exports[`matches expected output: bigint.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

const theBiggestInt = 9007199254740991n;

const alsoHuge = BigInt(9007199254740991);
// ↪ 9007199254740991n

const hugeButString = BigInt('9007199254740991');
// ↪ 9007199254740991n

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

const theBiggestInt = 9007199254740991n;
const alsoHuge = BigInt(9007199254740991);
// ↪ 9007199254740991n

const hugeButString = BigInt('9007199254740991');
// ↪ 9007199254740991n
`;

exports[`matches expected output: capturing-groups.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/*  eslint-disable no-console */

const re = /(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})/;

console.log(re.exec('1999-02-29')?.groups?.year);

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow strict

/*  eslint-disable no-console */

const re = /(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})/;

console.log(re.exec('1999-02-29')?.groups?.year);
`;

exports[`matches expected output: capturing-groups.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/*  eslint-disable no-console */

const re = /(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})/;

console.log(re.exec('1999-02-29')?.groups?.year);

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

var _re$exec, _re$exec$groups;

/*  eslint-disable no-console */

const re = /(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})/;
console.log((_re$exec = re.exec('1999-02-29')) === null || _re$exec === void 0 ? void 0 : (_re$exec$groups = _re$exec.groups) === null || _re$exec$groups === void 0 ? void 0 : _re$exec$groups.year);
`;

exports[`matches expected output: capturing-groups.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/*  eslint-disable no-console */

const re = /(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})/;

console.log(re.exec('1999-02-29')?.groups?.year);

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
var _re$exec, _re$exec$groups;

/*  eslint-disable no-console */

const re = /(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})/;
console.log((_re$exec = re.exec('1999-02-29')) === null || _re$exec === void 0 ? void 0 : (_re$exec$groups = _re$exec.groups) === null || _re$exec$groups === void 0 ? void 0 : _re$exec$groups.year);
`;

exports[`matches expected output: class-fields.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

export default class ClassFields {
  publicField: number = 1;
  #privateField: number = 2;
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow strict

export default class ClassFields {
  publicField: number = 1;
  #privateField: number = 2;
}
`;

exports[`matches expected output: class-fields.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

export default class ClassFields {
  publicField: number = 1;
  #privateField: number = 2;
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }
function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }
var _privateField = /*#__PURE__*/new WeakMap();

class ClassFields {
  constructor() {
    (0, _defineProperty2.default)(this, "publicField", 1);
    _classPrivateFieldInitSpec(this, _privateField, {
      writable: true,
      value: 2
    });
  }
}
exports.default = ClassFields;
`;

exports[`matches expected output: class-fields.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

export default class ClassFields {
  publicField: number = 1;
  #privateField: number = 2;
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }
function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }
var _privateField = /*#__PURE__*/new WeakMap();

export default class ClassFields {
  constructor() {
    _defineProperty(this, "publicField", 1);
    _classPrivateFieldInitSpec(this, _privateField, {
      writable: true,
      value: 2
    });
  }
}
`;

exports[`matches expected output: dev-expression.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable no-console */

if (__DEV__) {
  const dev = __DEV__ ? 'foo' : 'bar';
  console.log(dev);

  console.warn({
    // this shouldn't change (valid object key):
    __DEV__: 'value',

    // this should change (replaceable __DEV__ value):
    key: __DEV__,
  });
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/*@flow strict*/declare var __DEV__: boolean;

/* eslint-disable no-console */

if (__DEV__) {
  const dev = __DEV__ ? 'foo' : 'bar';
  console.log(dev);

  console.warn({
    // this shouldn't change (valid object key):
    __DEV__: 'value',

    // this should change (replaceable __DEV__ value):
    key: __DEV__
  });
}
`;

exports[`matches expected output: dev-expression.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable no-console */

if (__DEV__) {
  const dev = __DEV__ ? 'foo' : 'bar';
  console.log(dev);

  console.warn({
    // this shouldn't change (valid object key):
    __DEV__: 'value',

    // this should change (replaceable __DEV__ value):
    key: __DEV__,
  });
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

/* eslint-disable no-console */

if (process.env.NODE_ENV !== "production") {
  const dev = process.env.NODE_ENV !== "production" ? 'foo' : 'bar';
  console.log(dev);
  console.warn({
    // this shouldn't change (valid object key):
    __DEV__: 'value',
    // this should change (replaceable __DEV__ value):
    key: process.env.NODE_ENV !== "production"
  });
}
`;

exports[`matches expected output: dev-expression.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable no-console */

if (__DEV__) {
  const dev = __DEV__ ? 'foo' : 'bar';
  console.log(dev);

  console.warn({
    // this shouldn't change (valid object key):
    __DEV__: 'value',

    // this should change (replaceable __DEV__ value):
    key: __DEV__,
  });
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~


/* eslint-disable no-console */

if (process.env.NODE_ENV !== "production") {
  const dev = process.env.NODE_ENV !== "production" ? 'foo' : 'bar';
  console.log(dev);
  console.warn({
    // this shouldn't change (valid object key):
    __DEV__: 'value',
    // this should change (replaceable __DEV__ value):
    key: process.env.NODE_ENV !== "production"
  });
}
`;

exports[`matches expected output: dev-expression-abuse-1.error.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable */

const __DEV__ = process.env.NODE_ENV !== 'production';

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: /mock/path/mockFile.js: You are trying to re-declare __DEV__ virtual constant but that's illegal. This constant is being defined by our Babel preset.
`;

exports[`matches expected output: dev-expression-abuse-1.error.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable */

const __DEV__ = process.env.NODE_ENV !== 'production';

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: /mock/path/mockFile.js: You are trying to re-declare __DEV__ virtual constant but that's illegal. This constant is being defined by our Babel preset.
`;

exports[`matches expected output: dev-expression-abuse-1.error.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable */

const __DEV__ = process.env.NODE_ENV !== 'production';

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: /mock/path/mockFile.js: You are trying to re-declare __DEV__ virtual constant but that's illegal. This constant is being defined by our Babel preset.
`;

exports[`matches expected output: dev-expression-abuse-2.error.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable */

let a,
  __DEV__,
  b = process.env.NODE_ENV !== 'production';

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: /mock/path/mockFile.js: You are trying to re-declare __DEV__ virtual constant but that's illegal. This constant is being defined by our Babel preset.
`;

exports[`matches expected output: dev-expression-abuse-2.error.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable */

let a,
  __DEV__,
  b = process.env.NODE_ENV !== 'production';

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: /mock/path/mockFile.js: You are trying to re-declare __DEV__ virtual constant but that's illegal. This constant is being defined by our Babel preset.
`;

exports[`matches expected output: dev-expression-abuse-2.error.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable */

let a,
  __DEV__,
  b = process.env.NODE_ENV !== 'production';

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: /mock/path/mockFile.js: You are trying to re-declare __DEV__ virtual constant but that's illegal. This constant is being defined by our Babel preset.
`;

exports[`matches expected output: dynamic-import.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable */

const React = require('react');

const BoldTodoRenderer = React.lazy(() =>
  import(
    // $FlowExpectedError[cannot-resolve-module]
    './BoldTodoRenderer'
  ),
);

module.exports = function MyComponent(): React.Element<typeof React.Suspense> {
  return (
    <React.Suspense fallback={<div>Loading...</div>}>
      <BoldTodoRenderer />
    </React.Suspense>
  );
};

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable */

const React = require('react');

const BoldTodoRenderer = React.lazy(() =>
import(
// $FlowExpectedError[cannot-resolve-module]
'./BoldTodoRenderer'));



module.exports = function MyComponent(): React.Element<typeof React.Suspense> {
  return (
    <React.Suspense fallback={<div>Loading...</div>}>
      <BoldTodoRenderer />
    </React.Suspense>);

};
`;

exports[`matches expected output: dynamic-import.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable */

const React = require('react');

const BoldTodoRenderer = React.lazy(() =>
  import(
    // $FlowExpectedError[cannot-resolve-module]
    './BoldTodoRenderer'
  ),
);

module.exports = function MyComponent(): React.Element<typeof React.Suspense> {
  return (
    <React.Suspense fallback={<div>Loading...</div>}>
      <BoldTodoRenderer />
    </React.Suspense>
  );
};

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/* eslint-disable */

const React = require('react');
const BoldTodoRenderer = React.lazy(() => Promise.resolve().then(() => _interopRequireWildcard(require('./BoldTodoRenderer'))));
module.exports = function MyComponent() {
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(React.Suspense, {
    fallback: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      children: "Loading..."
    }),
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(BoldTodoRenderer, {})
  });
};
`;

exports[`matches expected output: dynamic-import.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable */

const React = require('react');

const BoldTodoRenderer = React.lazy(() =>
  import(
    // $FlowExpectedError[cannot-resolve-module]
    './BoldTodoRenderer'
  ),
);

module.exports = function MyComponent(): React.Element<typeof React.Suspense> {
  return (
    <React.Suspense fallback={<div>Loading...</div>}>
      <BoldTodoRenderer />
    </React.Suspense>
  );
};

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
import { jsx as _jsx } from "react/jsx-runtime";

/* eslint-disable */

const React = require('react');
const BoldTodoRenderer = React.lazy(() => import(
// $FlowExpectedError[cannot-resolve-module]
'./BoldTodoRenderer'));
module.exports = function MyComponent() {
  return /*#__PURE__*/_jsx(React.Suspense, {
    fallback: /*#__PURE__*/_jsx("div", {
      children: "Loading..."
    }),
    children: /*#__PURE__*/_jsx(BoldTodoRenderer, {})
  });
};
`;

exports[`matches expected output: exponentiation-operator.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable */

const x: number = (1 ** 2) ** (3 ** 4);

console.warn(x);

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable */

const x: number = (1 ** 2) ** 3 ** 4;

console.warn(x);
`;

exports[`matches expected output: exponentiation-operator.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable */

const x: number = (1 ** 2) ** (3 ** 4);

console.warn(x);

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

/* eslint-disable */

const x = (1 ** 2) ** 3 ** 4;
console.warn(x);
`;

exports[`matches expected output: exponentiation-operator.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable */

const x: number = (1 ** 2) ** (3 ** 4);

console.warn(x);

~~~~~~~~~~ OUTPUT ~~~~~~~~~~


/* eslint-disable */

const x = (1 ** 2) ** 3 ** 4;
console.warn(x);
`;

exports[`matches expected output: flow-enums.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

enum StatusDefault1 {
  Active,
  Paused,
  Off,
}

enum StatusDefault2 of string {
  Active,
  Paused,
  Off,
}

enum StatusString1 {
  Active = 'active',
  Paused = 'paused',
  Off = 'off',
}

enum StatusString2 of string {
  Active = 'active',
  Paused = 'paused',
  Off = 'off',
}

enum StatusNumber1 {
  Active = 1,
  Paused = 2,
  Off = 3,
}

enum StatusNumber2 of number {
  Active = 1,
  Paused = 2,
  Off = 3,
}

enum StatusBoolean1 {
  Active = true,
  Off = false,
}

enum StatusBoolean2 of boolean {
  Active = true,
  Off = false,
}

enum StatusSymbol of symbol {
  Active,
  Paused,
  Off,
}

enum StatusUnknownMembers {
  Active,
  Paused,
  Off,
  ...
}

export const a: StatusDefault1 = StatusDefault1.Active;
export const b: StatusString1 = StatusString1.Active;
export const c: StatusNumber1 = StatusNumber1.Active;
export const d: StatusBoolean2 = StatusBoolean2.Active;
export const e: StatusSymbol = StatusSymbol.Active;
export const f: StatusUnknownMembers = StatusUnknownMembers.Active;

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow strict

enum StatusDefault1 {
  Active,
  Paused,
  Off,}


enum StatusDefault2 of string {
  Active,
  Paused,
  Off,}


enum StatusString1 {
  Active = 'active',
  Paused = 'paused',
  Off = 'off',}


enum StatusString2 of string {
  Active = 'active',
  Paused = 'paused',
  Off = 'off',}


enum StatusNumber1 {
  Active = 1,
  Paused = 2,
  Off = 3,}


enum StatusNumber2 of number {
  Active = 1,
  Paused = 2,
  Off = 3,}


enum StatusBoolean1 {
  Active = true,
  Off = false,}


enum StatusBoolean2 of boolean {
  Active = true,
  Off = false,}


enum StatusSymbol of symbol {
  Active,
  Paused,
  Off,}


enum StatusUnknownMembers {
  Active,
  Paused,
  Off,...}



export const a: StatusDefault1 = StatusDefault1.Active;
export const b: StatusString1 = StatusString1.Active;
export const c: StatusNumber1 = StatusNumber1.Active;
export const d: StatusBoolean2 = StatusBoolean2.Active;
export const e: StatusSymbol = StatusSymbol.Active;
export const f: StatusUnknownMembers = StatusUnknownMembers.Active;
`;

exports[`matches expected output: flow-enums.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

enum StatusDefault1 {
  Active,
  Paused,
  Off,
}

enum StatusDefault2 of string {
  Active,
  Paused,
  Off,
}

enum StatusString1 {
  Active = 'active',
  Paused = 'paused',
  Off = 'off',
}

enum StatusString2 of string {
  Active = 'active',
  Paused = 'paused',
  Off = 'off',
}

enum StatusNumber1 {
  Active = 1,
  Paused = 2,
  Off = 3,
}

enum StatusNumber2 of number {
  Active = 1,
  Paused = 2,
  Off = 3,
}

enum StatusBoolean1 {
  Active = true,
  Off = false,
}

enum StatusBoolean2 of boolean {
  Active = true,
  Off = false,
}

enum StatusSymbol of symbol {
  Active,
  Paused,
  Off,
}

enum StatusUnknownMembers {
  Active,
  Paused,
  Off,
  ...
}

export const a: StatusDefault1 = StatusDefault1.Active;
export const b: StatusString1 = StatusString1.Active;
export const c: StatusNumber1 = StatusNumber1.Active;
export const d: StatusBoolean2 = StatusBoolean2.Active;
export const e: StatusSymbol = StatusSymbol.Active;
export const f: StatusUnknownMembers = StatusUnknownMembers.Active;

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.f = exports.e = exports.d = exports.c = exports.b = exports.a = void 0;
const StatusDefault1 = require("flow-enums-runtime").Mirrored(["Active", "Paused", "Off"]);
const StatusDefault2 = require("flow-enums-runtime").Mirrored(["Active", "Paused", "Off"]);
const StatusString1 = require("flow-enums-runtime")({
  Active: 'active',
  Paused: 'paused',
  Off: 'off'
});
const StatusString2 = require("flow-enums-runtime")({
  Active: 'active',
  Paused: 'paused',
  Off: 'off'
});
const StatusNumber1 = require("flow-enums-runtime")({
  Active: 1,
  Paused: 2,
  Off: 3
});
const StatusNumber2 = require("flow-enums-runtime")({
  Active: 1,
  Paused: 2,
  Off: 3
});
const StatusBoolean1 = require("flow-enums-runtime")({
  Active: true,
  Off: false
});
const StatusBoolean2 = require("flow-enums-runtime")({
  Active: true,
  Off: false
});
const StatusSymbol = require("flow-enums-runtime")({
  Active: Symbol("Active"),
  Paused: Symbol("Paused"),
  Off: Symbol("Off")
});
const StatusUnknownMembers = require("flow-enums-runtime").Mirrored(["Active", "Paused", "Off"]);
const a = StatusDefault1.Active;
exports.a = a;
const b = StatusString1.Active;
exports.b = b;
const c = StatusNumber1.Active;
exports.c = c;
const d = StatusBoolean2.Active;
exports.d = d;
const e = StatusSymbol.Active;
exports.e = e;
const f = StatusUnknownMembers.Active;
exports.f = f;
`;

exports[`matches expected output: flow-enums.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

enum StatusDefault1 {
  Active,
  Paused,
  Off,
}

enum StatusDefault2 of string {
  Active,
  Paused,
  Off,
}

enum StatusString1 {
  Active = 'active',
  Paused = 'paused',
  Off = 'off',
}

enum StatusString2 of string {
  Active = 'active',
  Paused = 'paused',
  Off = 'off',
}

enum StatusNumber1 {
  Active = 1,
  Paused = 2,
  Off = 3,
}

enum StatusNumber2 of number {
  Active = 1,
  Paused = 2,
  Off = 3,
}

enum StatusBoolean1 {
  Active = true,
  Off = false,
}

enum StatusBoolean2 of boolean {
  Active = true,
  Off = false,
}

enum StatusSymbol of symbol {
  Active,
  Paused,
  Off,
}

enum StatusUnknownMembers {
  Active,
  Paused,
  Off,
  ...
}

export const a: StatusDefault1 = StatusDefault1.Active;
export const b: StatusString1 = StatusString1.Active;
export const c: StatusNumber1 = StatusNumber1.Active;
export const d: StatusBoolean2 = StatusBoolean2.Active;
export const e: StatusSymbol = StatusSymbol.Active;
export const f: StatusUnknownMembers = StatusUnknownMembers.Active;

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
const StatusDefault1 = require("flow-enums-runtime").Mirrored(["Active", "Paused", "Off"]);
const StatusDefault2 = require("flow-enums-runtime").Mirrored(["Active", "Paused", "Off"]);
const StatusString1 = require("flow-enums-runtime")({
  Active: 'active',
  Paused: 'paused',
  Off: 'off'
});
const StatusString2 = require("flow-enums-runtime")({
  Active: 'active',
  Paused: 'paused',
  Off: 'off'
});
const StatusNumber1 = require("flow-enums-runtime")({
  Active: 1,
  Paused: 2,
  Off: 3
});
const StatusNumber2 = require("flow-enums-runtime")({
  Active: 1,
  Paused: 2,
  Off: 3
});
const StatusBoolean1 = require("flow-enums-runtime")({
  Active: true,
  Off: false
});
const StatusBoolean2 = require("flow-enums-runtime")({
  Active: true,
  Off: false
});
const StatusSymbol = require("flow-enums-runtime")({
  Active: Symbol("Active"),
  Paused: Symbol("Paused"),
  Off: Symbol("Off")
});
const StatusUnknownMembers = require("flow-enums-runtime").Mirrored(["Active", "Paused", "Off"]);
export const a = StatusDefault1.Active;
export const b = StatusString1.Active;
export const c = StatusNumber1.Active;
export const d = StatusBoolean2.Active;
export const e = StatusSymbol.Active;
export const f = StatusUnknownMembers.Active;
`;

exports[`matches expected output: generator.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable */

function* generator(i: number) {
  yield i;
  yield i + 10;
}

const gen = generator(10);

console.log(gen.next().value); // 10
console.log(gen.next().value); // 20

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable */

function* generator(i: number) {
  yield i;
  yield i + 10;
}

const gen = generator(10);

console.log(gen.next().value); // 10
console.log(gen.next().value); // 20
`;

exports[`matches expected output: generator.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable */

function* generator(i: number) {
  yield i;
  yield i + 10;
}

const gen = generator(10);

console.log(gen.next().value); // 10
console.log(gen.next().value); // 20

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

/* eslint-disable */

function* generator(i) {
  yield i;
  yield i + 10;
}
const gen = generator(10);
console.log(gen.next().value); // 10
console.log(gen.next().value); // 20
`;

exports[`matches expected output: generator.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable */

function* generator(i: number) {
  yield i;
  yield i + 10;
}

const gen = generator(10);

console.log(gen.next().value); // 10
console.log(gen.next().value); // 20

~~~~~~~~~~ OUTPUT ~~~~~~~~~~


/* eslint-disable */

function* generator(i) {
  yield i;
  yield i + 10;
}
const gen = generator(10);
console.log(gen.next().value); // 10
console.log(gen.next().value); // 20
`;

exports[`matches expected output: invariant-global.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

invariant(Math.random(), 'This should stay AS IS!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

invariant(Math.random(), 'This should stay AS IS!');
`;

exports[`matches expected output: invariant-global.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

invariant(Math.random(), 'This should stay AS IS!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

/* eslint-disable */

invariant(Math.random(), 'This should stay AS IS!');
`;

exports[`matches expected output: invariant-global.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

invariant(Math.random(), 'This should stay AS IS!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

invariant(Math.random(), 'This should stay AS IS!');
`;

exports[`matches expected output: invariant-import.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

import { invariant } from '@adeira/js';
import { something } from 'else';

invariant(Math.random(), 'You shall not pass!');
invariant(Math.random(), 'You shall not pass %s!', 'Jerry');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

import { invariant } from '@adeira/js';
import { something } from 'else';

invariant(Math.random(), 'You shall not pass!');
invariant(Math.random(), 'You shall not pass %s!', 'Jerry');
`;

exports[`matches expected output: invariant-import.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

import { invariant } from '@adeira/js';
import { something } from 'else';

invariant(Math.random(), 'You shall not pass!');
invariant(Math.random(), 'You shall not pass %s!', 'Jerry');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

var _js = require("@adeira/js");
var _else = require("else");
/* eslint-disable */

!Math.random() ? process.env.NODE_ENV !== "production" ? (0, _js.invariant)(false, 'You shall not pass!') : (0, _js.invariant)(false) : void 0;
!Math.random() ? process.env.NODE_ENV !== "production" ? (0, _js.invariant)(false, 'You shall not pass %s!', 'Jerry') : (0, _js.invariant)(false) : void 0;
`;

exports[`matches expected output: invariant-import.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

import { invariant } from '@adeira/js';
import { something } from 'else';

invariant(Math.random(), 'You shall not pass!');
invariant(Math.random(), 'You shall not pass %s!', 'Jerry');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

import { invariant } from '@adeira/js';
import { something } from 'else';
!Math.random() ? process.env.NODE_ENV !== "production" ? invariant(false, 'You shall not pass!') : invariant(false) : void 0;
!Math.random() ? process.env.NODE_ENV !== "production" ? invariant(false, 'You shall not pass %s!', 'Jerry') : invariant(false) : void 0;
`;

exports[`matches expected output: invariant-require.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

const { invariant } = require('@adeira/js');

invariant(Math.random(), 'You shall not pass!');
invariant(Math.random(), 'You shall not pass %s!', 'Jerry');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

const { invariant } = require('@adeira/js');

invariant(Math.random(), 'You shall not pass!');
invariant(Math.random(), 'You shall not pass %s!', 'Jerry');
`;

exports[`matches expected output: invariant-require.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

const { invariant } = require('@adeira/js');

invariant(Math.random(), 'You shall not pass!');
invariant(Math.random(), 'You shall not pass %s!', 'Jerry');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

/* eslint-disable */

const {
  invariant
} = require('@adeira/js');
!Math.random() ? process.env.NODE_ENV !== "production" ? invariant(false, 'You shall not pass!') : invariant(false) : void 0;
!Math.random() ? process.env.NODE_ENV !== "production" ? invariant(false, 'You shall not pass %s!', 'Jerry') : invariant(false) : void 0;
`;

exports[`matches expected output: invariant-require.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

const { invariant } = require('@adeira/js');

invariant(Math.random(), 'You shall not pass!');
invariant(Math.random(), 'You shall not pass %s!', 'Jerry');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

const {
  invariant
} = require('@adeira/js');
!Math.random() ? process.env.NODE_ENV !== "production" ? invariant(false, 'You shall not pass!') : invariant(false) : void 0;
!Math.random() ? process.env.NODE_ENV !== "production" ? invariant(false, 'You shall not pass %s!', 'Jerry') : invariant(false) : void 0;
`;

exports[`matches expected output: jsx.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

import type { Node } from 'react';

const React = () => {};

export default function Component(): Node {
  return (
    <>
      <div>aaa</div>
      <div>bbb</div>
    </>
  );
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow strict

import type { Node } from 'react';

const React = () => {};

export default function Component(): Node {
  return (
    <>
      <div>aaa</div>
      <div>bbb</div>
    </>);

}
`;

exports[`matches expected output: jsx.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

import type { Node } from 'react';

const React = () => {};

export default function Component(): Node {
  return (
    <>
      <div>aaa</div>
      <div>bbb</div>
    </>
  );
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Component;
var _jsxRuntime = require("react/jsx-runtime");

const React = () => {};
function Component() {
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      children: "aaa"
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      children: "bbb"
    })]
  });
}
`;

exports[`matches expected output: jsx.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

import type { Node } from 'react';

const React = () => {};

export default function Component(): Node {
  return (
    <>
      <div>aaa</div>
      <div>bbb</div>
    </>
  );
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
import { jsx as _jsx } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";

const React = () => {};
export default function Component() {
  return /*#__PURE__*/_jsxs(_Fragment, {
    children: [/*#__PURE__*/_jsx("div", {
      children: "aaa"
    }), /*#__PURE__*/_jsx("div", {
      children: "bbb"
    })]
  });
}
`;

exports[`matches expected output: numeric-separators.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable */

const budget = 1_000_000_000_000;
const nibbles = 0b1010_0001_1000_0101;
const message = 0xa0_b0_c0;

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable */

const budget = 1_000_000_000_000;
const nibbles = 0b1010_0001_1000_0101;
const message = 0xa0_b0_c0;
`;

exports[`matches expected output: numeric-separators.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable */

const budget = 1_000_000_000_000;
const nibbles = 0b1010_0001_1000_0101;
const message = 0xa0_b0_c0;

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

/* eslint-disable */

const budget = 1000000000000;
const nibbles = 0b1010000110000101;
const message = 0xa0b0c0;
`;

exports[`matches expected output: numeric-separators.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable */

const budget = 1_000_000_000_000;
const nibbles = 0b1010_0001_1000_0101;
const message = 0xa0_b0_c0;

~~~~~~~~~~ OUTPUT ~~~~~~~~~~


/* eslint-disable */

const budget = 1000000000000;
const nibbles = 0b1010000110000101;
const message = 0xa0b0c0;
`;

exports[`matches expected output: optional-catch-binding.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

try {
  // ...
} catch {
  // ...
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow strict

try {
  // ...
} catch {
  // ...
}
`;

exports[`matches expected output: optional-catch-binding.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

try {
  // ...
} catch {
  // ...
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

try {
  // ...
} catch {
  // ...
}
`;

exports[`matches expected output: optional-catch-binding.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

try {
  // ...
} catch {
  // ...
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~


try {
  // ...
} catch {
  // ...
}
`;

exports[`matches expected output: optional-chaining.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

module.exports = function (a: ?{ +[string]: any, ... }): string {
  return a?.b ?? 'default';
};

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow

module.exports = function (a: ?{ +[string]: any, ...}): string {
  return a?.b ?? 'default';
};
`;

exports[`matches expected output: optional-chaining.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

module.exports = function (a: ?{ +[string]: any, ... }): string {
  return a?.b ?? 'default';
};

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

module.exports = function (a) {
  var _a$b;
  return (_a$b = a === null || a === void 0 ? void 0 : a.b) !== null && _a$b !== void 0 ? _a$b : 'default';
};
`;

exports[`matches expected output: optional-chaining.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

module.exports = function (a: ?{ +[string]: any, ... }): string {
  return a?.b ?? 'default';
};

~~~~~~~~~~ OUTPUT ~~~~~~~~~~


module.exports = function (a) {
  var _a$b;
  return (_a$b = a === null || a === void 0 ? void 0 : a.b) !== null && _a$b !== void 0 ? _a$b : 'default';
};
`;

exports[`matches expected output: rest-operator.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

/* eslint-disable no-console */

type AnyObject = { +[key: string]: any, ... };

module.exports = function (a: AnyObject, ...rest: Array<any>): AnyObject {
  console.warn([1, ...rest]);
  const { b, ...c } = a;
  return {
    ...b,
    ...c,
  };
};

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow

/* eslint-disable no-console */

type AnyObject = { +[key: string]: any, ...};

module.exports = function (a: AnyObject, ...rest: Array<any>): AnyObject {
  console.warn([1, ...rest]);
  const { b, ...c } = a;
  return {
    ...b,
    ...c
  };
};
`;

exports[`matches expected output: rest-operator.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

/* eslint-disable no-console */

type AnyObject = { +[key: string]: any, ... };

module.exports = function (a: AnyObject, ...rest: Array<any>): AnyObject {
  console.warn([1, ...rest]);
  const { b, ...c } = a;
  return {
    ...b,
    ...c,
  };
};

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

/* eslint-disable no-console */

module.exports = function (a, ...rest) {
  console.warn([1, ...rest]);
  const {
    b,
    ...c
  } = a;
  return {
    ...b,
    ...c
  };
};
`;

exports[`matches expected output: rest-operator.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

/* eslint-disable no-console */

type AnyObject = { +[key: string]: any, ... };

module.exports = function (a: AnyObject, ...rest: Array<any>): AnyObject {
  console.warn([1, ...rest]);
  const { b, ...c } = a;
  return {
    ...b,
    ...c,
  };
};

~~~~~~~~~~ OUTPUT ~~~~~~~~~~


/* eslint-disable no-console */

module.exports = function (a, ...rest) {
  console.warn([1, ...rest]);
  const {
    b,
    ...c
  } = a;
  return {
    ...b,
    ...c
  };
};
`;

exports[`matches expected output: throw-expressions.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

() => throw new Error('');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

() => throw new Error('');
`;

exports[`matches expected output: throw-expressions.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

() => throw new Error('');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

/* eslint-disable */

() => function (e) {
  throw e;
}(new Error(''));
`;

exports[`matches expected output: throw-expressions.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

() => throw new Error('');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

() => function (e) {
  throw e;
}(new Error(''));
`;

exports[`matches expected output: warning-global.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

warning(Math.random(), 'This should stay AS IS!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

warning(Math.random(), 'This should stay AS IS!');
`;

exports[`matches expected output: warning-global.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

warning(Math.random(), 'This should stay AS IS!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

/* eslint-disable */

warning(Math.random(), 'This should stay AS IS!');
`;

exports[`matches expected output: warning-global.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

warning(Math.random(), 'This should stay AS IS!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

warning(Math.random(), 'This should stay AS IS!');
`;

exports[`matches expected output: warning-import.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

import { warning } from '@adeira/js';
import { something } from 'else';

warning(Math.random(), 'I am warning you!');
warning(Math.random(), 'I am warning you %s!', 'René');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

import { warning } from '@adeira/js';
import { something } from 'else';

warning(Math.random(), 'I am warning you!');
warning(Math.random(), 'I am warning you %s!', 'René');
`;

exports[`matches expected output: warning-import.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

import { warning } from '@adeira/js';
import { something } from 'else';

warning(Math.random(), 'I am warning you!');
warning(Math.random(), 'I am warning you %s!', 'René');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

var _js = require("@adeira/js");
var _else = require("else");
/* eslint-disable */

process.env.NODE_ENV !== "production" ? (0, _js.warning)(Math.random(), 'I am warning you!') : void 0;
process.env.NODE_ENV !== "production" ? (0, _js.warning)(Math.random(), 'I am warning you %s!', 'René') : void 0;
`;

exports[`matches expected output: warning-import.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

import { warning } from '@adeira/js';
import { something } from 'else';

warning(Math.random(), 'I am warning you!');
warning(Math.random(), 'I am warning you %s!', 'René');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

import { warning } from '@adeira/js';
import { something } from 'else';
process.env.NODE_ENV !== "production" ? warning(Math.random(), 'I am warning you!') : void 0;
process.env.NODE_ENV !== "production" ? warning(Math.random(), 'I am warning you %s!', 'René') : void 0;
`;

exports[`matches expected output: warning-require.js: flow 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

const { warning } = require('@adeira/js');

warning(Math.random(), 'I am warning you!');
warning(Math.random(), 'I am warning you %s!', 'René');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

const { warning } = require('@adeira/js');

warning(Math.random(), 'I am warning you!');
warning(Math.random(), 'I am warning you %s!', 'René');
`;

exports[`matches expected output: warning-require.js: js (old browsers) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

const { warning } = require('@adeira/js');

warning(Math.random(), 'I am warning you!');
warning(Math.random(), 'I am warning you %s!', 'René');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

/* eslint-disable */

const {
  warning
} = require('@adeira/js');
process.env.NODE_ENV !== "production" ? warning(Math.random(), 'I am warning you!') : void 0;
process.env.NODE_ENV !== "production" ? warning(Math.random(), 'I am warning you %s!', 'René') : void 0;
`;

exports[`matches expected output: warning-require.js: js-esm (with ES6 import/export) 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

const { warning } = require('@adeira/js');

warning(Math.random(), 'I am warning you!');
warning(Math.random(), 'I am warning you %s!', 'René');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

const {
  warning
} = require('@adeira/js');
process.env.NODE_ENV !== "production" ? warning(Math.random(), 'I am warning you!') : void 0;
process.env.NODE_ENV !== "production" ? warning(Math.random(), 'I am warning you %s!', 'René') : void 0;
`;
