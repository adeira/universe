# https://www.arangodb.com/docs/stable/deployment-kubernetes-deployment-resource.html
apiVersion: 'database.arangodb.com/v1alpha'
kind: 'ArangoDeployment'
metadata:
  name: 'arangodb-single-server'
spec:
  mode: Single
  image: 'arangodb/arangodb:3.12.0'
  tls:
    caSecretName: None # TODO? (Abacus currently doesn't support self-signed certificates, see: https://arangodb.github.io/kube-arangodb/docs/driver-configuration.html)
  externalAccess:
    type: None # the database must be accessible only from within the cluster network
  single:
    args:
      - '--server.authentication=true'
      - '--query.require-with=true' # require WITH clauses even when not in cluster
    storageClassName: do-block-storage # DigitalOcean Block Storage
    resources:
      # TODO: limits
      requests:
        cpu: 64m
        memory: 1024Mi
        storage: 1Gi

---
# TODO: automatically restore DB at the end of the day for developers?

apiVersion: 'batch/v1'
kind: 'CronJob'
metadata:
  # See also `arangodb-single-server-restore`
  name: 'arangodb-single-server-backup'
spec:
  #          ┌───────────── minute (0 - 59)
  #          │  ┌───────────── hour (0 - 23)
  #          │  │  ┌───────────── day of the month (1 - 31)
  #          │  │  │ ┌───────────── month (1 - 12)
  #          │  │  │ │ ┌───────────── day of the week (0 - 6)
  #          │  │  │ │ │
  #          │  │  │ │ │
  schedule: '0 1 * * *' # Daily: https://crontab.guru/#0_1_*_*_*
  concurrencyPolicy: Allow
  successfulJobsHistoryLimit: 2
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          initContainers:
            - name: dump-create
              image: 'arangodb/arangodb:3.12.0'
              imagePullPolicy: Always
              args:
                - 'arangodump'
                - '--server.authentication=true'
                - '--server.endpoint=$(ARANGODB_URL)'
                - '--server.database=$(ARANGODB_DATABASE)'
                - '--server.username=$(ARANGODB_USERNAME)'
                - '--server.password=$(ARANGODB_PASSWORD)'
                - '--output-directory=/tmp/dump'
                - '--include-system-collections=true'
                - '--overwrite=true'
                - '--dump-data=true'
                - '--envelope=false'
              env:
                - name: ARANGODB_URL
                  valueFrom:
                    secretKeyRef:
                      name: abacus-arangodb-secret
                      key: ARANGODB_URL
                - name: ARANGODB_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: abacus-arangodb-secret
                      key: ARANGODB_DATABASE
                - name: ARANGODB_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: abacus-arangodb-secret
                      key: ARANGODB_USERNAME
                - name: ARANGODB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: abacus-arangodb-secret
                      key: ARANGODB_PASSWORD
              volumeMounts:
                - name: dump
                  mountPath: /tmp/dump
          containers:
            - name: dump-upload
              image: amazon/aws-cli:2.15.42
              imagePullPolicy: Always
              command: ['/bin/sh', '-c']
              args:
                - 'aws s3 sync /tmp/dump s3://abacus-arangodb-backup-38c739d1-9e39-4052-8746-b2f21523f6c0/$(date "+%Y-%m-%dT%H:%M:%S")'
              env:
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: abacus-aws-secret
                      key: AWS_ACCESS_KEY_ID
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: abacus-aws-secret
                      key: AWS_SECRET_ACCESS_KEY
              volumeMounts:
                - name: dump
                  mountPath: /tmp/dump
          volumes:
            - name: dump
              emptyDir: {}
