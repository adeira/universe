# https://www.arangodb.com/docs/stable/deployment-kubernetes-deployment-resource.html
apiVersion: 'database.arangodb.com/v1alpha'
kind: 'ArangoDeployment'
metadata:
  name: 'arangodb-single-server'
spec:
  mode: Single
  image: 'arangodb/arangodb:3.7.9'
  tls:
    caSecretName: None # TODO
  auth:
    jwtSecretName: None # TODO
  externalAccess:
    type: None
  single:
    storageClassName: do-block-storage # DigitalOcean Block Storage
    resources:
      requests:
        cpu: 1
        memory: 512M
        storage: 1Gi
      limits:
        cpu: 2
        memory: 1024M
        storage: 1Gi

---
apiVersion: 'batch/v1beta1'
kind: 'CronJob'
metadata:
  name: 'arangodb-single-server-backup'
spec:
  #          ┌───────────── minute (0 - 59)
  #          │ ┌───────────── hour (0 - 23)
  #          │ │ ┌───────────── day of the month (1 - 31)
  #          │ │ │ ┌───────────── month (1 - 12)
  #          │ │ │ │ ┌───────────── day of the week (0 - 6) (Sunday to Saturday;
  #          │ │ │ │ │                                   7 is also Sunday on some systems)
  #          │ │ │ │ │
  #          │ │ │ │ │
  schedule: '*/5 * * * *' # every 5 minutes
  #schedule: '0 * * * *' # equivalent to `@hourly` # TODO
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          initContainers:
            - name: dump-create
              image: 'arangodb/arangodb:3.7.9'
              args:
                - 'arangodump'
                # https://<deployment-name>.<namespace>.svc.cluster.local:8529
                - '--server.endpoint=tcp://arangodb-single-server.default.svc.cluster.local:8529' # TODO: ssl://…
                #- '--server.username=$(username)' # TODO
                #- '--server.password=$(password)' # TODO
                - '--server.authentication=false'
                - '--server.database=abacus'
                - '--output-directory=/tmp/dump'
                - '--overwrite=true' # TODO
              volumeMounts:
                - name: dump
                  mountPath: /tmp/dump
          containers:
            - name: db-dump-upload
              image: amazon/aws-cli:2.1.29
              command: ['/bin/sh', '-c']
              args:
                [
                  'aws s3 sync /tmp/dump s3://abacus-arangodb-backup-38c739d1-9e39-4052-8746-b2f21523f6c0/$(date "+%Y-%m-%dT%H:%M:%S")',
                ]
              env:
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: abacus-aws-secret
                      key: AWS_ACCESS_KEY_ID
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: abacus-aws-secret
                      key: AWS_SECRET_ACCESS_KEY
              volumeMounts:
                - name: dump
                  mountPath: /tmp/dump
          volumes:
            - name: dump
              emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: abacus-service
spec:
  type: LoadBalancer
  selector:
    app: abacus
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: abacus-deployment
  labels:
    app: abacus
spec:
  # Careful with changing the replicas - we are currently running DB migrations during the app start.
  replicas: 1
  selector:
    matchLabels:
      app: abacus
  template:
    metadata:
      labels:
        app: abacus
    spec:
      containers:
        - name: abacus
          image: mrtnzlml/abacus
          ports:
            - containerPort: 5000
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: abacus-aws-secret
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: abacus-aws-secret
                  key: AWS_SECRET_ACCESS_KEY
          args:
            - '--arangodb-url=http://arangodb-single-server.default.svc.cluster.local:8529' # TODO: https://…
