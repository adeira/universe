// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`matches expected output: .flowconfig.declarations 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
; https://flow.org/en/docs/config/declarations/

[declarations]
.*/third_party/.*
.*/src/\\(foo\\|bar\\)/.*
.*\\.decl\\.js
<PROJECT_ROOT>/third_party/.*

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "declarations": [
    ".*/third_party/.*",
    ".*/src/\\\\(foo\\\\|bar\\\\)/.*",
    ".*\\\\.decl\\\\.js",
    "<PROJECT_ROOT>/third_party/.*"
  ],
  "ignore": [],
  "include": [],
  "libs": [],
  "lints": null,
  "options": null,
  "strict": [],
  "untyped": [],
  "version": null
}
`;

exports[`matches expected output: .flowconfig.empty 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "declarations": [],
  "ignore": [],
  "include": [],
  "libs": [],
  "lints": null,
  "options": null,
  "strict": [],
  "untyped": [],
  "version": null
}
`;

exports[`matches expected output: .flowconfig.empty-sections 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
[declarations]

[include]

[ignore]

[untyped]

[libs]

[lints]

[options]

[version]

[strict]

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "declarations": [],
  "ignore": [],
  "include": [],
  "libs": [],
  "lints": null,
  "options": null,
  "strict": [],
  "untyped": [],
  "version": null
}
`;

exports[`matches expected output: .flowconfig.empty-sections-comments 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
# This is a comment
  # This is a comment
; This is a comment
  ; This is a comment
ðŸ’© This is a comment
  ðŸ’© This is a comment

[declarations]
# This is a comment
  # This is a comment
; This is a comment
  ; This is a comment
ðŸ’© This is a comment
  ðŸ’© This is a comment

[include]
# This is a comment
  # This is a comment
; This is a comment
  ; This is a comment
ðŸ’© This is a comment
  ðŸ’© This is a comment

[ignore]
# This is a comment
  # This is a comment
; This is a comment
  ; This is a comment
ðŸ’© This is a comment
  ðŸ’© This is a comment

[untyped]
# This is a comment
  # This is a comment
; This is a comment
  ; This is a comment
ðŸ’© This is a comment
  ðŸ’© This is a comment

[libs]
# This is a comment
  # This is a comment
; This is a comment
  ; This is a comment
ðŸ’© This is a comment
  ðŸ’© This is a comment

[lints]
# This is a comment
  # This is a comment
; This is a comment
  ; This is a comment
ðŸ’© This is a comment
  ðŸ’© This is a comment

[options]
# This is a comment
  # This is a comment
; This is a comment
  ; This is a comment
ðŸ’© This is a comment
  ðŸ’© This is a comment

[version]
# This is a comment
  # This is a comment
; This is a comment
  ; This is a comment
ðŸ’© This is a comment
  ðŸ’© This is a comment

[strict]
# This is a comment
  # This is a comment
; This is a comment
  ; This is a comment
ðŸ’© This is a comment
  ðŸ’© This is a comment

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "declarations": [],
  "ignore": [],
  "include": [],
  "libs": [],
  "lints": null,
  "options": null,
  "strict": [],
  "untyped": [],
  "version": null
}
`;

exports[`matches expected output: .flowconfig.ignore 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
; https://flow.org/en/docs/config/ignore/

[ignore]
.*/__tests__/.*
.*/src/\\(foo\\|bar\\)/.*
.*\\.ignore\\.js
<PROJECT_ROOT>/__tests__/.*
<PROJECT_ROOT>/node_modules/.*
!<PROJECT_ROOT>/node_modules/not-ignored-package-A/.*
!<PROJECT_ROOT>/node_modules/not-ignored-package-B/.*

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "declarations": [],
  "ignore": [
    ".*/__tests__/.*",
    ".*/src/\\\\(foo\\\\|bar\\\\)/.*",
    ".*\\\\.ignore\\\\.js",
    "<PROJECT_ROOT>/__tests__/.*",
    "<PROJECT_ROOT>/node_modules/.*",
    "!<PROJECT_ROOT>/node_modules/not-ignored-package-A/.*",
    "!<PROJECT_ROOT>/node_modules/not-ignored-package-B/.*"
  ],
  "include": [],
  "libs": [],
  "lints": null,
  "options": null,
  "strict": [],
  "untyped": [],
  "version": null
}
`;

exports[`matches expected output: .flowconfig.include 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
; https://flow.org/en/docs/config/include/

[include]
../externalFile.js
../externalDir/
../otherProject/*.js
../otherProject/**/coolStuff/

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "declarations": [],
  "ignore": [],
  "include": [
    "../externalFile.js",
    "../externalDir/",
    "../otherProject/*.js",
    "../otherProject/**/coolStuff/"
  ],
  "libs": [],
  "lints": null,
  "options": null,
  "strict": [],
  "untyped": [],
  "version": null
}
`;

exports[`matches expected output: .flowconfig.invalid 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
ðŸ’© Purpose of this fixture is to see how it behaves when the config is
ðŸ’© crazy invalid (and potentially improve the behavior).

[ignore]
<PROJECT_ROOT>/\\.git/.*
<PROJECT_ROOT>/\\.git/.*
<PROJECT_ROOT>/\\.git/.*

[ignore]
<PROJECT_ROOT>/\\.hg/.*
<PROJECT_ROOT>/\\.hg/.*

[IGNORE]
<PROJECT_ROOT>

[unknown]
{
  "what": {
    "is": {
      "this": -1
    }
  }
}

[[ignore]]

[version]
>=0.138.0 <0.140.0
0.138.0

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "declarations": [],
  "ignore": [
    "<PROJECT_ROOT>/\\\\.git/.*",
    "<PROJECT_ROOT>/\\\\.git/.*",
    "<PROJECT_ROOT>/\\\\.git/.*",
    "<PROJECT_ROOT>/\\\\.hg/.*",
    "<PROJECT_ROOT>/\\\\.hg/.*",
    "<PROJECT_ROOT>"
  ],
  "include": [],
  "libs": [],
  "lints": null,
  "options": null,
  "strict": [],
  "untyped": [],
  "version": "0.138.0"
}
`;

exports[`matches expected output: .flowconfig.options 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
; https://flow.org/en/docs/config/options/

[options]
all=true
babel_loose_array_spread=true
emoji=true
esproposal.class_instance_fields=enable
esproposal.class_static_fields=enable
esproposal.decorators=warn
esproposal.export_star_as=warn
esproposal.optional_chaining=ignore
esproposal.nullish_coalescing=ignore
exact_by_default=true
experimental.const_params=true
include_warnings=true
lazy_mode=watchman
log.file=/tmp/flow/yadada.log
max_header_tokens=10
module.file_ext=.foo
module.file_ext=.bar
module.ignore_non_literal_requires=true

; TODO: should we expand these mappers (?)
module.name_mapper='^image![a-zA-Z0-9$_]+$' -> 'ImageStub'
module.name_mapper.extension='css' -> '<PROJECT_ROOT>/CSSFlowStub.js.flow'

module.system=haste
module.system.node.main_field=foo
module.system.node.main_field=bar
module.system.node.main_field=baz
module.system.node.resolve_dirname=node_modules
module.system.node.resolve_dirname=custom_node_modules
module.use_strict=false
munge_underscores=false
no_flowlib=false
react.runtime=automatic
server.max_workers=2
sharedmemory.dirs=/dev/shm
sharedmemory.dirs=/tmp
sharedmemory.minimum_available=536870912
sharedmemory.hash_table_pow=19
sharedmemory.heap_size=26843545600
sharedmemory.log_level=0
strip_root=false
suppress_comment=\\\\(.\\\\|\\n\\\\)*\\\\$FlowFixMe1
suppress_comment=\\\\(.\\\\|\\n\\\\)*\\\\$FlowFixMe2
suppress_type=$FlowFixMe
suppress_type=$FlowTODO
temp_dir=/tmp/flow
traces=100
types_first=true
well_formed_exports=true
well_formed_exports.includes=<PROJECT_ROOT>/dirA
well_formed_exports.includes=<PROJECT_ROOT>/dirB

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "declarations": [],
  "ignore": [],
  "include": [],
  "libs": [],
  "lints": null,
  "options": {
    "all": true,
    "babel_loose_array_spread": true,
    "emoji": true,
    "esproposal.class_instance_fields": "enable",
    "esproposal.class_static_fields": "enable",
    "esproposal.decorators": "warn",
    "esproposal.export_star_as": "warn",
    "esproposal.optional_chaining": "ignore",
    "esproposal.nullish_coalescing": "ignore",
    "exact_by_default": true,
    "experimental.const_params": true,
    "include_warnings": true,
    "lazy_mode": "watchman",
    "log.file": "/tmp/flow/yadada.log",
    "max_header_tokens": 10,
    "module.file_ext": [
      ".foo",
      ".bar"
    ],
    "module.ignore_non_literal_requires": true,
    "module.name_mapper": [
      "'^image![a-zA-Z0-9$_]+$' -> 'ImageStub'"
    ],
    "module.name_mapper.extension": [
      "'css' -> '<PROJECT_ROOT>/CSSFlowStub.js.flow'"
    ],
    "module.system": "haste",
    "module.system.node.main_field": [
      "foo",
      "bar",
      "baz"
    ],
    "module.system.node.resolve_dirname": [
      "node_modules",
      "custom_node_modules"
    ],
    "module.use_strict": false,
    "munge_underscores": false,
    "no_flowlib": false,
    "react.runtime": "automatic",
    "server.max_workers": 2,
    "sharedmemory.dirs": [
      "/dev/shm",
      "/tmp"
    ],
    "sharedmemory.minimum_available": 536870912,
    "sharedmemory.hash_table_pow": 19,
    "sharedmemory.heap_size": 26843545600,
    "sharedmemory.log_level": 0,
    "strip_root": false,
    "suppress_comment": [
      "\\\\\\\\(.\\\\\\\\|\\\\n\\\\\\\\)*\\\\\\\\$FlowFixMe1",
      "\\\\\\\\(.\\\\\\\\|\\\\n\\\\\\\\)*\\\\\\\\$FlowFixMe2"
    ],
    "suppress_type": [
      "$FlowFixMe",
      "$FlowTODO"
    ],
    "temp_dir": "/tmp/flow",
    "traces": 100,
    "types_first": true,
    "well_formed_exports": true,
    "well_formed_exports.includes": [
      "<PROJECT_ROOT>/dirA",
      "<PROJECT_ROOT>/dirB"
    ]
  },
  "strict": [],
  "untyped": [],
  "version": null
}
`;

exports[`matches expected output: .flowconfig.universe 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
; https://flow.org/en/docs/config/ignore/
[ignore]
<PROJECT_ROOT>/\\.git/.*
.+/.+\\.gzip\\.js
.+/\\.next/.+

; Do not use <PROJECT_ROOT> for Bazel, see: https://github.com/facebook/flow/issues/2250
.+/bazel-bin/.+
.+/bazel-out/.+
.+/bazel-testlogs/.+
.+/bazel-universe/.+


; https://flow.org/en/docs/config/untyped/
[untyped]


; https://flow.org/en/docs/config/declarations/
[declarations]
.+/node_modules/.+


; https://flow.org/en/docs/config/libs/
[libs]
./flow-typed/

; Please note: one disadvantage of these libs is that it's gonna be available for every JS file even though
; it should be defined only for one workspace.
./src/monorepo-scanner/src/flow/


; These lints are enabled in normal mode. Consult [strict] mode to see what additional lints
; are enabled in strict mode. Only disabled rules in normal mode should be added to strict mode.
;
; https://flow.org/en/docs/config/lints/
[lints]
all=error
ambiguous-object-type=off
sketchy-null-bool=off
unclear-type=off
untyped-import=off


; This setting complements [lints] section: all the enabled lints still throw errors + these
; additional lints are enabled only in strict mode (no need to list here every lint). Local
; strict mode behaves the same like strict mode except it turns off 'nonstrict-import' rule.
;
; https://flow.org/en/docs/strict/
[strict]
ambiguous-object-type
sketchy-null-bool
unclear-type
untyped-import


; https://flow.org/en/docs/config/options/
[options]
emoji=true
exact_by_default=true
include_warnings=true
facebook.fbt=FbtWithoutString

; This enables new react JSX transforms in flow
react.runtime=automatic

; Allow dynamic \`require(path.join(__dirname, 'myFile.json'))\`
module.ignore_non_literal_requires=true

; This option lets you alias 'any' with a given string - useful for explaining why youâ€™re using 'any'.
suppress_type=$FlowFixMe

; This option is always ON in the strict mode. We are enabling it even for the classic mode.
; Function parameters are considered const (i.e., treated as if they were declared with const rather than let).
experimental.const_params=true

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "declarations": [
    ".+/node_modules/.+"
  ],
  "ignore": [
    "<PROJECT_ROOT>/\\\\.git/.*",
    ".+/.+\\\\.gzip\\\\.js",
    ".+/\\\\.next/.+",
    ".+/bazel-bin/.+",
    ".+/bazel-out/.+",
    ".+/bazel-testlogs/.+",
    ".+/bazel-universe/.+"
  ],
  "include": [],
  "libs": [
    "./flow-typed/",
    "./src/monorepo-scanner/src/flow/"
  ],
  "lints": {
    "all": "error",
    "ambiguous-object-type": "off",
    "sketchy-null-bool": "off",
    "unclear-type": "off",
    "untyped-import": "off"
  },
  "options": {
    "emoji": true,
    "exact_by_default": true,
    "include_warnings": true,
    "facebook.fbt": "FbtWithoutString",
    "react.runtime": "automatic",
    "module.ignore_non_literal_requires": true,
    "suppress_type": [
      "$FlowFixMe"
    ],
    "experimental.const_params": true
  },
  "strict": [
    "ambiguous-object-type",
    "sketchy-null-bool",
    "unclear-type",
    "untyped-import"
  ],
  "untyped": [],
  "version": null
}
`;

exports[`matches expected output: .flowconfig.untyped 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
; https://flow.org/en/docs/config/untyped/

[untyped]
.*/third_party/.*
.*/src/\\(foo\\|bar\\)/.*
.*\\.untype\\.js
<PROJECT_ROOT>/third_party/.*

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "declarations": [],
  "ignore": [],
  "include": [],
  "libs": [],
  "lints": null,
  "options": null,
  "strict": [],
  "untyped": [
    ".*/third_party/.*",
    ".*/src/\\\\(foo\\\\|bar\\\\)/.*",
    ".*\\\\.untype\\\\.js",
    "<PROJECT_ROOT>/third_party/.*"
  ],
  "version": null
}
`;

exports[`matches expected output: .flowconfig.version 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
; https://flow.org/en/docs/config/version/

[version]
>=0.138.0 <0.140.0

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "declarations": [],
  "ignore": [],
  "include": [],
  "libs": [],
  "lints": null,
  "options": null,
  "strict": [],
  "untyped": [],
  "version": ">=0.138.0 <0.140.0"
}
`;
