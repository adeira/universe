"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load(
    "@io_bazel_rules_rust//rust:rust.bzl",
    "rust_binary",
    "rust_library",
    "rust_test",
)

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//third_party/cargo", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "notice",  # MIT from expression "MIT OR Apache-2.0"
])

# Generated Targets

# Unsupported target "lib" with type "bench" omitted

# Unsupported target "sha1sum" with type "example" omitted

alias(
    name = "sha_1",
    actual = ":sha1",
    tags = [
        "cargo-raze",
        "manual",
    ],
)

rust_library(
    name = "sha1",
    srcs = glob(["**/*.rs"]),
    aliases = {
    },
    crate_features = [
        "default",
        "std",
    ],
    crate_root = "src/lib.rs",
    crate_type = "lib",
    data = [],
    edition = "2018",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "0.9.2",
    # buildifier: leave-alone
    deps = [
        "@raze__block_buffer__0_9_0//:block_buffer",
        "@raze__cfg_if__1_0_0//:cfg_if",
        "@raze__digest__0_9_0//:digest",
        "@raze__opaque_debug__0_3_0//:opaque_debug",
    ] + selects.with_or({
        # cfg(any(target_arch = "x86", target_arch = "x86_64"))
        (
            "@io_bazel_rules_rust//rust/platform:x86_64-apple-darwin",
            "@io_bazel_rules_rust//rust/platform:x86_64-unknown-linux-gnu",
        ): [
            "@raze__cpuid_bool__0_1_2//:cpuid_bool",
        ],
        "//conditions:default": [],
    }),
)

# Unsupported target "lib" with type "test" omitted
