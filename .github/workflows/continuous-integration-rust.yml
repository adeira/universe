name: Continuous Integration (Rust)

on:
  push:
    paths:
      - '.github/workflows/**'
      - 'src/ya-comiste-rust/**'

jobs:
  build-targets-apple-linux:
    strategy:
      fail-fast: true
      matrix:
        projectPaths:
          - 'src/ya-comiste-rust/'
        os:
          - macos-latest
          - ubuntu-latest
        include:
          - os: macos-latest
            target: x86_64-apple-darwin # 64-bit OSX (10.7+, Lion+)
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu # 64-bit Linux (kernel 2.6.32+, glibc 2.11+)

    runs-on: ${{ matrix.os }}

    # On Macos we only test the code (to make sure it works for development)
    # On Linux we also run Clippy and try to build it for production (+ upload build artifact)
    steps:
      - uses: actions/checkout@v2.3.4

      # https://github.com/actions-rs/toolchain
      - uses: actions-rs/toolchain@v1.0.7
        with:
          profile: minimal
          components: clippy
          toolchain: stable
          target: ${{ matrix.target }}

      # https://github.com/actions-rs/clippy-check
      - uses: actions-rs/clippy-check@v1.0.7
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # `--all-targets` + `--all-features`   (in order to also check tests and non-default crate features)
          args: >-
            --all-targets
            --all-features
            --manifest-path ${{ format('{0}{1}', matrix.projectPaths, 'Cargo.toml') }}
            --target ${{ matrix.target }}

      # https://github.com/actions-rs/cargo
      - name: Run all tests
        uses: actions-rs/cargo@v1.0.3
        with:
          command: test
          args: >-
            --no-fail-fast
            --manifest-path ${{ format('{0}{1}', matrix.projectPaths, 'Cargo.toml') }}
            --target ${{ matrix.target }}

      # https://github.com/actions-rs/cargo
      # TODO: replace with `--include-ignored` once it's in stable Rust Compiler
      - name: Run all IGNORED tests
        uses: actions-rs/cargo@v1.0.3
        with:
          command: test
          args: >-
            --no-fail-fast
            --manifest-path ${{ format('{0}{1}', matrix.projectPaths, 'Cargo.toml') }}
            --target ${{ matrix.target }}
            -- --ignored

      # https://github.com/actions-rs/cargo
      - name: Try to build a release
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions-rs/cargo@v1.0.3
        with:
          command: build
          args: >-
            --manifest-path ${{ format('{0}{1}', matrix.projectPaths, 'Cargo.toml') }}
            --target ${{ matrix.target }}
            --release

      # https://github.com/actions/upload-artifact
      - name: Upload build artifact
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target }}
          path: ${{ format('{0}{1}', matrix.projectPaths, 'target/release') }}
          if-no-files-found: error
