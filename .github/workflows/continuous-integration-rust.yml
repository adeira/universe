name: Continuous Integration (Rust)

on: [push]

jobs:
  rust-test:
    name: Rust test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        manifest:
          - 'src/abacus/Cargo.toml'
          - 'src/x/Cargo.toml'

    steps:
      # https://github.com/actions/checkout
      - uses: actions/checkout@v3.0.2

      # https://github.com/dorny/paths-filter
      - uses: dorny/paths-filter@v2.10.2
        id: paths-filter
        with:
          filters: |
            src:
              - 'src/abacus/**'
              - 'src/x/**'

      # https://github.com/actions-rs/toolchain
      - uses: actions-rs/toolchain@v1.0.7
        if: steps.paths-filter.outputs.src == 'true'
        with:
          profile: minimal
          components: clippy, rustfmt
          toolchain: stable
          override: true
          target: 'x86_64-unknown-linux-gnu' # 64-bit Linux (kernel 2.6.32+, glibc 2.11+)

      # https://github.com/actions-rs/cargo
      - uses: actions-rs/cargo@v1.0.3
        if: steps.paths-filter.outputs.src == 'true'
        with:
          command: fmt
          args: >-
            --all
            --check
            --verbose
            --message-format=human
            --manifest-path ${{ matrix.manifest }}

      # https://github.com/actions-rs/cargo
      - uses: actions-rs/cargo@v1.0.3
        if: steps.paths-filter.outputs.src == 'true'
        with:
          command: clippy
          # `--all-targets` + `--all-features`   (in order to also check tests and non-default crate features)
          args: >-
            --locked
            --all-targets
            --all-features
            --manifest-path ${{ matrix.manifest }}
            --target x86_64-unknown-linux-gnu

      # https://github.com/actions-rs/cargo
      - name: Run all tests
        uses: actions-rs/cargo@v1.0.3
        if: steps.paths-filter.outputs.src == 'true'
        with:
          command: test
          args: >-
            --no-fail-fast
            --manifest-path ${{ matrix.manifest }}
            --target x86_64-unknown-linux-gnu
            --color always

      # https://github.com/actions-rs/cargo
      # TODO: replace with `--include-ignored` once it's in stable Rust Compiler
      # TODO: how to run integration tests better? (they have extra platform requirements)
      # - name: Run all IGNORED tests
      #   uses: actions-rs/cargo@v1.0.3
      #   with:
      #     command: test
      #     args: >-
      #       --no-fail-fast
      #       --manifest-path ${{ matrix.manifest }}
      #       --target ${{ matrix.target }}
      #       -- --ignored
